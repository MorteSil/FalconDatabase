<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FalconDatabase</name>
    </assembly>
    <members>
        <member name="T:FalconDatabase.Enums.ClasstableType">
            <summary>
            A Generic Enum that encompasses the Types of objects available in a given class.
            The final entry in each collection indicates the end of that group and be used for
            iterating collections based on the value: for (int i = 1; i LT (int)AIR_UNITS; i++)...
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableType.NOTHING">
            <summary>
            The object does not have a Type assigned.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableType.ATM">
            <summary>
            An Air Tasking Manager.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableType.GTM">
            <summary>
            A Ground Tasking Manager used by the Campaign Engine to manage ground units.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableType.NTM">
            <summary>
            Naval Tasking Manager used by the Campaign Engine to manage Naval Assets.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableType.TEAM">
            <summary>
            A logical collection of assets and political groups collectively attempting to accomplish a single shared goal.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableType.CHAFF">
            <summary>
            Collection of highly reflective metal shards designed to confuse Radar Signals.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableType.FLARE">
            <summary>
            A bright, hot countermeasure deployed from aircraft designed to confuse Ifrared Sensors.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableType.EJECT">
            <summary>
            A rapid movement expelling an individual from an aircraft or vehicle in an emergency.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableType.FLYING_EYE">
            <summary>
            A method of controlling the Simulated Aircraft in BMS.
            </summary>
        </member>
        <member name="T:FalconDatabase.Enums.ClasstableDomain">
            <summary>
            The different Environments where a Unit, Vehicle, or object exists and operates.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableDomain.Unknown">
            <summary>
            The Domain is unknown for this object.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableDomain.Abstract">
            <summary>
            The object is abstract and does not interact with the 3D world.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableDomain.Air">
            <summary>
            The object is designed to operate in the air.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableDomain.Land">
            <summary>
            The object is designed to operate on the ground.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableDomain.Sea">
            <summary>
            The object is designed to operate in the water.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableDomain.Space">
            <summary>
            The object is designed to operate in space.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableDomain.Underground">
            <summary>
            The object is designed to operate under the ground.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableDomain.Undersea">
            <summary>
            The object is designed to operate under the water.
            </summary>
        </member>
        <member name="T:FalconDatabase.Enums.ClasstableClass">
            <summary>
            Available Classes of objects in the Database Class Table.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableClass.Unknown">
            <summary>
            Unknown Object that cannot be interacted with.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableClass.Animal">
            <summary>
            An animal or other scenery object that cannot be interacted with.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableClass.Feature">
            <summary>
            A Building, Runway, or other static componen of the 3D World which can be interacted with.
            Objectives, such as an Air Base, are made up of a collection of Features.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableClass.Manager">
            <summary>
            One of the Component Managers for the Campaign Engine. This could be the Air Tasking Manager,
            Ground Tasking Manager, or Naval Tasking Manager. Each Team has their own set of managers.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableClass.Objective">
            <summary>
            A Collection of Features which make up a location, installation, or other area of
            interest on the map that can be interacted with.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableClass.SoundEffect">
            <summary>
            A Sound Effect for a particular action or event in the Game.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableClass.Unit">
            <summary>
            A Generic Class representing all movable objects in the 2D world.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableClass.Vehicle">
            <summary>
            An moveable object in the 3D world capable of interacting with other objects.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableClass.Weapon">
            <summary>
            An object that can be attached to,fired from, or carried on a Unit to cause damage to another object.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableClass.Weather">
            <summary>
            A Class encompassing the 3D Weather Components and their underlying configurations and behavior.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableClass.Session">
            <summary>
            A single iteration of the game being active without being closed.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableClass.Game">
            <summary>
            An instance of the Game.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableClass.Group">
            <summary>
            A Collection of Database Objects.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableClass.Dialog">
            <summary>
            A UI Element that can be interacted with.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClasstableClass.Abstract">
            <summary>
            Abstract object that can be interacted with.
            </summary>
        </member>
        <member name="T:FalconDatabase.Enums.AirVehicleType">
            <summary>
            Types of Air Vehicles Available
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.AirVehicleType.AIRPLANE">
            <summary>
            The Object is an Aircraft.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.AirVehicleType.BOMB">
            <summary>
            The Object is a Bomb.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.AirVehicleType.POD">
            <summary>
            The Object is a Pod.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.AirVehicleType.FUEL_TANK">
            <summary>
            The Object is a Fuel Tank.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.AirVehicleType.HELICOPTER">
            <summary>
            The Object is a Helicopter.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.AirVehicleType.MISSILE">
            <summary>
            The Object is a Missile.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.AirVehicleType.RECON">
            <summary>
            The Object is a Recon Camera.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.AirVehicleType.ROCKET">
            <summary>
            The Object is a Rocket.
            </summary>
        </member>
        <member name="T:FalconDatabase.Enums.GroundVehicleType">
            <summary>
            Types of Ground Units Available
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.GroundVehicleType.FOOT">
            <summary>
            A type of movement where individuals use their feet.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.GroundVehicleType.TOWED">
            <summary>
            A type of movement where an object is attached to another unit for movement.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.GroundVehicleType.TRACKED">
            <summary>
            A type of vehicle where wheels are covered with a flexible tough material for better traction.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.GroundVehicleType.WHEELED">
            <summary>
            A type vehicle that uses wheels to travel across land.
            </summary>
        </member>
        <member name="T:FalconDatabase.Enums.NavalVehicleType">
            <summary>
            Types of Naval Vehicles Available.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.NavalVehicleType.ASSAULT">
            <summary>
            A fast, maneuverable sea vehicle.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.NavalVehicleType.BOAT">
            <summary>
            A generic term for sea vehicles.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.NavalVehicleType.BUOY">
            <summary>
            A floating object used to identify area information or collect and transmit data.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.NavalVehicleType.CAPITAL_SHIP">
            <summary>
            A large sea vessel capable of engaging in combat and providing command and control support.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.NavalVehicleType.CARGO">
            <summary>
            A large sea vessel that carries goods and supplies.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.NavalVehicleType.CRUISER">
            <summary>
            A medium to large sized sea vessel designed for combat.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.NavalVehicleType.DEPTHCHARGE">
            <summary>
            An underwater explosive designed to combat submarines.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.NavalVehicleType.DESTROYER">
            <summary>
            A small to medium size sea vessel designed for front line combat.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.NavalVehicleType.FRIGATE">
            <summary>
            A small sea vessel designed for front line combat and support.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.NavalVehicleType.PATROL">
            <summary>
            A small, fast sea vehicle designed to provide security to larger vehicles or ports.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.NavalVehicleType.RAFT">
            <summary>
            A very small sea vehicle designed for emergency use.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.NavalVehicleType.SHIP">
            <summary>
            A generic term applied to large sea vehicles.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.NavalVehicleType.TANKER">
            <summary>
            A large sea vehicle that transports fuel.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.NavalVehicleType.TORPEDO">
            <summary>
            An underwater weapon capable of propelling itself through water and detonating an explosive against a target.
            </summary>
        </member>
        <member name="T:FalconDatabase.Enums.UnderseaVehicleType">
            <summary>
            Types of Undersea Vehicles Avaialble.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.UnderseaVehicleType.SUBMARINE">
            <summary>
            A pressurized vehicle that is capable of operating under water for extended periods of time.
            </summary>
        </member>
        <member name="T:FalconDatabase.Enums.CountryList">
            <summary>
            List of Country Identifiers in teh Campaign.
            This has been changed to be more generic given the inclusion of multiple theaters.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.CountryList.COUNTRY_0">
            <summary>
            Country 0
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.CountryList.COUNTRY_1">
            <summary>
            Country 1
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.CountryList.COUNTRY_2">
            <summary>
            Country 2
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.CountryList.COUNTRY_3">
            <summary>
            Country 3
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.CountryList.COUNTRY_4">
            <summary>
            Country 4
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.CountryList.COUNTRY_5">
            <summary>
            Country 5
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.CountryList.COUNTRY_6">
            <summary>
            Country 6
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.CountryList.COUNTRY_7">
            <summary>
            Country 7
            </summary>
        </member>
        <member name="T:FalconDatabase.Enums.DataType">
            <summary>
            Type of Objects contained in the Database.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.DataType.DMIN">
            <summary>
            Minimum Value used for indexing.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.DataType.FEATURE">
            <summary>
            A Feature Object is a component of an Objective.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.DataType.NONE">
            <summary>
            Object does not have a type.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.DataType.OBJECTIVE">
            <summary>
            An Objective Object is a collection of Features that make up an installation or notable location on a map..
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.DataType.UNIT">
            <summary>
            A Unit Object is an abstract component of the 2D world that cannot interact with other objects in the 3D world.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.DataType.VEHICLE">
            <summary>
            A Vehicle Object is moveable object of the 3D world capable of interacting with other objects.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.DataType.WEAPON">
            <summary>
            A Weapon Object is used to inflict damage on a target.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.DataType.DMAX">
            <summary>
            Max Data Value
            </summary>
        </member>
        <member name="T:FalconDatabase.Enums.ModeType">
            <summary>
            Modes used by the Game to determine Configurations for the Game and Environment.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ModeType.MODE_NORMAL">
            <summary>
            Normal Mode.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ModeType.MODE_CRIMSON">
            <summary>
            Crimson Mode.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ModeType.MODE_SHARK">
            <summary>
            Shark Mode.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ModeType.MODE_VIPER">
            <summary>
            Viper Mode.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ModeType.MODE_TIGER">
            <summary>
            Tiger Mode.
            </summary>
        </member>
        <member name="T:FalconDatabase.Enums.RadarType">
            <summary>
            Types of Radar Equipment in the Database.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.NO_RADAR">
            <summary>
            No Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.F16">
            <summary>
            Generic F-16 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.F16_SIMPLE">
            <summary>
            Simplified F-16 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.F16_360">
            <summary>
            360 Degree F-16 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.AMRAAM">
            <summary>
            AIM-120 AMRAAM Seeker Head
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.Mig21">
            <summary>
            Mig-21 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.Mig23">
            <summary>
            Mig-23 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.Mig25">
            <summary>
            Mig-25 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.Mig31">
            <summary>
            Mig-31 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.R2S6">
            <summary>
            2S6 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.A50">
            <summary>
            A-50 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.ADATS">
            <summary>
            ADATS Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.AEGIS">
            <summary>
            Aegis Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.AH66">
            <summary>
            AH-66 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.AV8B">
            <summary>
            AV-8B Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.BarLock">
            <summary>
            Bar Lock Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.Chapparal">
            <summary>
            Chapparal Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.E2C">
            <summary>
            E2-C Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.E3">
            <summary>
            E-3 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.F14">
            <summary>
            F-14 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.F15">
            <summary>
            F-15 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.ZUES">
            <summary>
            Zeus Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.F22">
            <summary>
            F-22 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.F4">
            <summary>
            F-4 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.F5">
            <summary>
            f-5 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.Hawk">
            <summary>
            Hawk Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.Nike">
            <summary>
            Nike Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.J5">
            <summary>
            J-5 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.J7">
            <summary>
            J-7 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.LongTrack">
            <summary>
            Long Track Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.LowBlowSearch">
            <summary>
            Low Blow Search Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.MPQ54">
            <summary>
            MPQ-54 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.MSQ48">
            <summary>
            MSQ-48 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.MSQ50">
            <summary>
            MSQ-50 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.Patriot">
            <summary>
            Patriot Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.PHOENIX">
            <summary>
            Phoenix Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.FanSong">
            <summary>
            Fan Song Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.LowBlow">
            <summary>
            Low Blow Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.PatHand">
            <summary>
            Patriot Handoff Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.SquarePair">
            <summary>
            Square Pair Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.StraightFlush">
            <summary>
            Straight Flush Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.LandRoll">
            <summary>
            Land Roll Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.SA9">
            <summary>
            SA-9 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.FlapLid">
            <summary>
            Flap Lid Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.SnapShot">
            <summary>
            Snap Shot Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.Slotback">
            <summary>
            Slot Back Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.SpoonRest">
            <summary>
            Spoon Rest Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.SU15">
            <summary>
            Su-15 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.TPS63">
            <summary>
            TPS-63 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.SA15">
            <summary>
            SA-15 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.ANVPS2">
            <summary>
            ANVP-S2 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.DrumTilt">
            <summary>
            Drum Tilt Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.PopGroup">
            <summary>
            Pop Group Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.TopDome">
            <summary>
            Top Dome Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.ANSPS10">
            <summary>
            AN/ASPQ-10 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.ANAPQ114">
            <summary>
            AN/ANPQ-114 Radar.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.RadarType.AGOnly">
            <summary>
            AG Only Radar.
            </summary>
        </member>
        <member name="T:FalconDatabase.Enums.DamageDataType">
            <summary>
            The types of damage a Weapon can cause to a target.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.DamageDataType.NoDamage">
            <summary>
            Weapon causes no significant damage.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.DamageDataType.PenetrationDam">
            <summary>
            Weapon causes penetration damage. 
            Effective against hardened targets.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.DamageDataType.HighExplosiveDam">
            <summary>
            Weapon detonates an explosion. 
            Effective against soft or area targets.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.DamageDataType.HeaveDam">
            <summary>
            Weapon causes heave damage leaving craters. 
            Effective against Runways.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.DamageDataType.IncendairyDam">
            <summary>
            Weapon causes heat or burning damage. 
            Effective against troops and other soft targets.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.DamageDataType.ProximityDam">
            <summary>
            Weapon detonates an explosion when it reaches a certain proximity. 
            Effective against fast moving targets, such as aircraft.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.DamageDataType.KineticDam">
            <summary>
            Weapon fires a projective to damage the target with an impact.
            Effective against soft and moderately hardened targets.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.DamageDataType.HydrostaticDam">
            <summary>
            Weapon causes damage by detonating an underwater explosion.
            Effective against sea vehicles..
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.DamageDataType.ChemicalDam">
            <summary>
            Weapon causes burning damage or erodes the surface of the target.
            Effective against soft or moderately hardened targets.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.DamageDataType.NuclearDam">
            <summary>
            Weapon causes significant thermal and kinetic damage through detonation of a Nuclear Device.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.DamageDataType.OtherDam">
            <summary>
            Weapon causes general, unspecified damage to the target.
            </summary>
        </member>
        <member name="T:FalconDatabase.Enums.ClassTableWeaponType">
            <summary>
            Weapon Types Available.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClassTableWeaponType.MINESWEEP">
            <summary>
            The Object is a Mine Sweeper.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClassTableWeaponType.GUN">
            <summary>
            The Object is a Gun.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClassTableWeaponType.RACK">
            <summary>
            The Object is a Rack.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.ClassTableWeaponType.LAUNCHER">
            <summary>
            The Object is a Launcher.
            </summary>
        </member>
        <member name="T:FalconDatabase.Enums.AirUnit">
            <summary>
            Types of Air Units available.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.AirUnit.FLIGHT">
            <summary>
            The Object is a Flight.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.AirUnit.PACKAGE">
            <summary>
            The Object is a Package.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.AirUnit.SQUADRON">
            <summary>
            The Object is a Squadron.
            </summary>
        </member>
        <member name="T:FalconDatabase.Enums.GroundUnit">
            <summary>
            Types of Ground Units Available
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.GroundUnit.BATTALION">
            <summary>
            A front line land combat unit.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.GroundUnit.BRIGADE">
            <summary>
            A large collection of ground units capable of engaging in multiple efforts simultaneously.
            </summary>
        </member>
        <member name="T:FalconDatabase.Enums.SeaUnit">
            <summary>
            Sea Units Available
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.SeaUnit.TASKFORCE">
            <summary>
            A collection of sea vehicles.
            </summary>
        </member>
        <member name="T:FalconDatabase.Enums.UnderseaUnit">
            <summary>
            Types of Undersea Units Available
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.UnderseaUnit.WOLFPACK">
            <summary>
            A submarine unit
            </summary>
        </member>
        <member name="T:FalconDatabase.Enums.LandFeature">
            <summary>
            Types of Land Features Available.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.CRATER">
            <summary>
            An area of depressed land caused by an explosive force.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.CTRL_TOWER">
            <summary>
            A vertical structure at an airfield designed to provide control functions for aircraft.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.BARN">
            <summary>
            A small building.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.BUNKER">
            <summary>
            A hardened military structure.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.BUSH">
            <summary>
            A small plant.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.FACTORYS">
            <summary>
            A collection of factories at an industrial complex.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.CHURCH">
            <summary>
            A religious building.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.CITY_HALL">
            <summary>
            A building or structure used to govern and manage a local area or city.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.DOCK">
            <summary>
            A structure that provides access to sea vessels from land.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.RUNWAY">
            <summary>
            A large concrete pad used to support takeoff and landing activies of aircraft.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.WAREHOUSE">
            <summary>
            A building used to store goods or supplies.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.HELIPAD">
            <summary>
            A designated location for helicopters to takeoff and land..
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.FUEL_TANKS">
            <summary>
            A group of structures that store fuel.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.NUKE_PLANT">
            <summary>
            A structure that produces electrical power using steam generated from Nuclear Fission.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.BRIDGES">
            <summary>
            A structure used to allow land vehicles to cross water.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.PIER">
            <summary>
            A large structure designed to allow individuals or small vehicles access to water or sea vehicles from land.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.PPOLE">
            <summary>
            A power pole used to support power transmission lines.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.SHOP">
            <summary>
            A commercial building where goods can be bought and sold.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.PTOWER">
            <summary>
            A large vertical structure used to provide stable support for heavy power transmission lines.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.APARTMENT">
            <summary>
            A residential building where multiple families or tenants live.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.HOUSE">
            <summary>
            A small building where a single family or tenant lives.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.PPLANT">
            <summary>
            A building where power is generated.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.TAXI_SIGN">
            <summary>
            A sign that is posted parallel to an airport Taxiway or Runway indicating airport layout.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.NAV_BEAC">
            <summary>
            A structure used to send navigation signals to aircraft using radio transmissions.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.RADAR_SITE">
            <summary>
            An area where radio transcievers send, receive, and process singals to perform Radio Detecion and Ranging operations.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.CRATERS">
            <summary>
            A collection of depressed land areas.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.RADARS">
            <summary>
            A piece of equipment used to perform Radio Detection and Ranging operations.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.RTOWER">
            <summary>
            A vertical structure designed to support radio equipment.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.TAXIWAY">
            <summary>
            A strip of concrete designed to allow aircraft to move around an airport.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.RAIL_TERMINALS">
            <summary>
            A complex, area, or collection of buildings designed to support rail activities.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.REFINERYS">
            <summary>
            A group of industrial areas designed to process raw materials into strategic resources.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.SAM">
            <summary>
            A Surface to Air Missile Site.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.SHED">
            <summary>
            A very small storage structure.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.BARRACKS">
            <summary>
            A building designed to house military personnel on an installation.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.TREE">
            <summary>
            A tall plany.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.WTOWER">
            <summary>
            A large tower that moves in the wind to generate power.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.TWNHALL">
            <summary>
            A building or small area where management of a town takes place.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.AIR_TERMINAL">
            <summary>
            A building at an airport where aircraft can park or load passengers, stores, or supplies.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.SHRINE">
            <summary>
            A religious building.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.PARK">
            <summary>
            A small recreation area, typically outdoors.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.OFF_BLOCK">
            <summary>
            An area of a town or city primarily composed of office or commercial buildings.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.TVSTN">
            <summary>
            A building where television signals are broadcast to viewers.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.HOTEL">
            <summary>
            A building or group of buildings where individuals can temporarily reside when visiting an area.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.HANGAR">
            <summary>
            A large building designed to store aircraft.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.LIGHTS">
            <summary>
            An electrical device that emits visible light, typically mounted on a pole or an elevated position.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.VASI">
            <summary>
            A group of lights and indicators used for aircraft approaches known as the Visual Approach Slope Indicator.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.TANK">
            <summary>
            A structure used to store fuel or other liquid resources.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.FENCE">
            <summary>
            A defensive or protective barrier used to mark the edge of a location or area.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.PARKINGLOT">
            <summary>
            An area of concrete used for storing vehicles.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.SMOKESTACK">
            <summary>
            A vertical structure attached to industrial buildings to allow smoke, steam, or other particulates to leave the building.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.BUILDING">
            <summary>
            A generic term for a physical structure.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.COOL_TWR">
            <summary>
            A tower used for cooling operations at a power plant, particularly with Nuclear Power plants.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.CONT_DOME">
            <summary>
            A rounded building component that sits atop a control tower at an airport.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.GUARDHOUSE">
            <summary>
            A small building where security guards work.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.TRANSFORMER">
            <summary>
            A structure or tower where power is converted from one type to another, 
            typically by adjusting voltage to allow transfer of high amounts across large distances.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.AMMO_DUMP">
            <summary>
            A hardened building where ammunition is stored.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.ART_SITE">
            <summary>
            A hardened location where Artillery can be deployed.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.OFFICE">
            <summary>
            A medium to large structure used for commercial operations.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.CHEM_PLANT">
            <summary>
            An industrial structure where chemicals are produced, refined, or processed.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.TOWER">
            <summary>
            A gneric term for a large vertical structure.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.HOSPITAL">
            <summary>
            A building or area where medical services are provided to sick and wounded.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.SHOPBLK">
            <summary>
            A commercial area of a town or city.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.STATIC">
            <summary>
            A persistent object that does not move.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.RUNWAY_MARKER">
            <summary>
            Numbers and other markings that provide visual identification and information about a runway.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.STADIUM">
            <summary>
            A large structure used for entertainment or sports activities.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandFeature.MONUMENT">
            <summary>
            A structure or building designed to commemmorate an event, person, or action.
            </summary>
        </member>
        <member name="T:FalconDatabase.Enums.LandObjective">
            <summary>
            Types of Land Objectives Available.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.AIRBASE">
            <summary>
            A large airport with infrastructure and supplies to support sustained flying operations.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.AIRSTRIP">
            <summary>
            An airport with infrastructure and supplies to support limited flying operations.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.ARMYBASE">
            <summary>
            A large installation with infrastructure and supplies to support sustained ground operations.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.BEACH">
            <summary>
            A geographic area where land and water meet.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.BORDER">
            <summary>
            An abstract line of demarcation between two poilitical entities.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.BRIDGE">
            <summary>
            A structure that provides a means for land vehicles to cross water.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.CHEMICAL">
            <summary>
            An industrial complex that produces chemicals.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.CITY">
            <summary>
            A collection of houses, buildings, and other structures in a given area.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.COM_CONTROL">
            <summary>
            A Military installation designed to support Command and Control of assets.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.DEPOT">
            <summary>
            A location to store supplies, fuel, weapons, or other important strategic assets.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.FACTORY">
            <summary>
            An industrial building capable of producing goods.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.FORD">
            <summary>
            A shallow area of water that can be crossed without need for a bridge or watercraft.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.FORTIFICATION">
            <summary>
            A defensive military installation.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.HILL_TOP">
            <summary>
            An elevated tactical position..
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.INTERSECT">
            <summary>
            A crossing of two or more means of travel.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.NAV_BEACON">
            <summary>
            A radio device used to send out navigation information to vehicles.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.NUCLEAR">
            <summary>
            A Power Plant that uses Nuclear Reactors to create steam pressure that drives turbines for Power Generation.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.PASS">
            <summary>
            A geographic area with a close proximity to a well-known or easily identified landmark or location.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.PORT">
            <summary>
            An area extending from land where Sea Vessels can be maintained, stored, repaired, and supplied.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.POWERPLANT">
            <summary>
            A facility where power is generated.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.RADAR">
            <summary>
            An installation where Radio Signals are processed for Radio Detection and Ranging of vehicles.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.RADIO_TOWER">
            <summary>
            A vertical structure where antennas or other Radio Equipment can be mounted for operational use.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.RAIL_TERMINAL">
            <summary>
            A collection of structures and Rail Lines where train vehicles can be maintained, stored, repaired, or supplied.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.RAILROAD">
            <summary>
            A means for Train Vehicles to travel.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.REFINERY">
            <summary>
            An industrial facility where petroleum or other chemicals can be processed into other, more valuable, strategic resources.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.ROAD">
            <summary>
            A means by which land vehicles can travel.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.SEA">
            <summary>
            A large body of water.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.TOWN">
            <summary>
            A small collection of buildings and structures in s given area smaller than a city.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.VILLAGE">
            <summary>
            A very small collection of buildings and structures in s given area smaller than a town.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.HARTS">
            <summary>
            A Hardened Artillery Site.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandObjective.SAM_SITE">
            <summary>
            A location where Surface to Air Missiles can deploy and engage air targets..
            </summary>
        </member>
        <member name="T:FalconDatabase.Enums.MoveType">
            <summary>
            Types of Movement a Vehicle can perform.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.MoveType.NoMove">
            <summary>
            Object is stationary and cannot move.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.MoveType.Foot">
            <summary>
            Object is a pedestrian and moves by using it's feet.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.MoveType.Wheeled">
            <summary>
            Object uses Wheels to travel across land.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.MoveType.Tracked">
            <summary>
            Object used a large, flxible component wrapped around several wheels to move across land with better traction.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.MoveType.LowAir">
            <summary>
            Object travels through the air at low altitudes, such as a helicopter.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.MoveType.Air">
            <summary>
            Object travels through the air at various high and low altitudes.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.MoveType.Naval">
            <summary>
            Object moves thorugh the water.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.MoveType.Rail">
            <summary>
            Object travels along tracks or rails.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.MoveType.MOVEMENT_TYPES">
            <summary>
            End of Movement Types
            </summary>
        </member>
        <member name="T:FalconDatabase.Enums.CombatClass">
            <summary>
            Aircraft Combat Classes
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.CombatClass.LegacyFighterBomber">
            <summary>
            3rd Generation Mult Role Aircraft (F4)
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.CombatClass.LegacyInterceptor">
            <summary>
            3rd Generation Light Fighter Aircraft, such as the (F5)
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.CombatClass.MaritimeMultiRole">
            <summary>
            Carrier-Base Multi Role Aircraft, such as the (F14)
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.CombatClass.AirSuperiority">
            <summary>
            4th/5th Gen Fighter Aircraft, such as the (F15)
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.CombatClass.MultiRole">
            <summary>
            4th/5th Gen Multi Role Fighters, such as the (F16)
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.CombatClass.Interceptor">
            <summary>
            4th/5th Gen Light Fighter Aircraft (Mig25)
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.CombatClass.FighterBomber">
            <summary>
            4th/5th Gen Attack/Strike Fighter (Mig27)
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.CombatClass.AirToGroundFighter">
            <summary>
            4th/5th Gen AG/CAS Aircraft (A10)
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.CombatClass.Bomber">
            <summary>
            Heavy Bomber/Strike Aircraft
            </summary>
        </member>
        <member name="T:FalconDatabase.Enums.SensorType">
            <summary>
            Available Sensor Types
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.SensorType.None">
            <summary>
            No Sensor in this Slot.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.SensorType.IR">
            <summary>
            Infrared Sensor
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.SensorType.Radar">
            <summary>
            Radar Sensor
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.SensorType.RWR">
            <summary>
            Radar Warning Receiver
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.SensorType.Visual">
            <summary>
            Visual Sensor
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.SensorType.HTS">
            <summary>
            HARM Targeting System
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.SensorType.TGP">
            <summary>
            Targeting Pod
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.SensorType.SARH">
            <summary>
            Semi-Active Radar Homing Sensor
            </summary>
        </member>
        <member name="T:FalconDatabase.Enums.LandingPattern">
            <summary>
            Landing Patterns for Airports
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandingPattern.None">
            <summary>
            Indicates the Point is not an Approach Point.
            Used to help keep the XML File Clean by not outputting unused Fields.
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandingPattern.Left">
            <summary>
            Left Approach
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandingPattern.Center">
            <summary>
            Center Approach
            </summary>
        </member>
        <member name="F:FalconDatabase.Enums.LandingPattern.Right">
            <summary>
            Right Approach
            </summary>
        </member>
        <member name="T:FalconDatabase.Files.AircraftTable">
            <summary>
            The Aircraft Database contained in the FALCON4_ACD.xml File.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.AircraftTable.Aircraft">
            <summary>
            Collection of <see cref="T:FalconDatabase.Objects.Components.AircraftDefinition" /> Entries exported from the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.AircraftTable.AircraftDataTable">
            <summary>
            Aircraft Component of the Database in Raw Data Format.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.AircraftTable.IsDefaultInitialization">
            <summary>
            <para>When <see langword="true"/>, indicates this <see cref="T:Utilities.AppFile"/> was successfully loaded from the file.</para>
            <para><see langword="false"/> indicates there were no values in the initialization data used for this <see cref="T:Utilities.AppFile"/> object and empty or default values were loaded instead.</para>
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.AircraftTable.Read(System.String)">
            <summary>
            Processes the XML Data in <paramref name="data"/> and attempts to convert it into a <see cref="T:System.Data.DataTable"/> with values read from <paramref name="data"/>.
            </summary>
            <param name="data">XML Data read from a Database File in the ..\TerrData\Objects\ Directory.</param>
            <returns><see langword="true"/> if the File is successfully read and parsed. Otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:FalconDatabase.Files.AircraftTable.Write">
            <summary>
            Formats the File Contents into bytes for writing to disk.
            </summary>
            <returns><see cref="T:System.Byte"/> array suitable for writing to a file.</returns>
        </member>
        <member name="M:FalconDatabase.Files.AircraftTable.ToString">
            <summary>
            Formats the Data in this Table for Generic Text Output.
            </summary>
            <returns><para><see cref="T:System.String"/> object with the data from this object.</para>
            <para>NOTE: This does not format the Database file for XML Output.</para></returns>
        </member>
        <member name="M:FalconDatabase.Files.AircraftTable.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Files.AircraftTable"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.AircraftTable.#ctor(System.String)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Files.AircraftTable"/> component of the Database with the data contained in the file at <paramref name="filePath"/>.
            </summary>
            <param name="filePath">Path to read the data from.</param>
        </member>
        <member name="T:FalconDatabase.Files.ClassTable">
            <summary>
            The Class Table Database contained in the FALCON4_CT.xml File.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.ClassTable.Classes">
            <summary>
            Collection of <see cref="T:FalconDatabase.Objects.Components.ClassEntityDefinition" /> Entries exported from the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.ClassTable.ClassDataTable">
            <summary>
            Class Table Element of the Database in Raw Data Format.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.ClassTable.IsDefaultInitialization">
            <summary>
            <para>When <see langword="true"/>, indicates this <see cref="T:Utilities.AppFile"/> was successfully loaded from the file.</para>
            <para><see langword="false"/> indicates there were no values in the initialization data used for this <see cref="T:Utilities.AppFile"/> object and empty or default values were loaded instead.</para>
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.ClassTable.Read(System.String)">
            <summary>
            Processes the XML Data in <paramref name="data"/> and attempts to convert it into a <see cref="T:System.Data.DataTable"/> with values read from <paramref name="data"/>.
            </summary>
            <param name="data">XML Data read from a Database File in the ..\TerrData\Objects\ Directory.</param>
            <returns><see langword="true"/> if the File is successfully read and parsed. Otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:FalconDatabase.Files.ClassTable.Write">
            <summary>
            Formats the File Contents into bytes for writing to disk.
            </summary>
            <returns><see cref="T:System.Byte"/> array suitable for writing to a file.</returns>
        </member>
        <member name="M:FalconDatabase.Files.ClassTable.ToString">
            <summary>
            Formats the Data in this Table for Generic Text Output.
            </summary>
            <returns><para><see cref="T:System.String"/> object with the data from this object.</para>
            <para>NOTE: This does not format the Database file for XML Output.</para></returns>
        </member>
        <member name="M:FalconDatabase.Files.ClassTable.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Files.ClassTable"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.ClassTable.#ctor(System.String)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Files.ClassTable"/> component of the Database with the data contained in the file at <paramref name="filePath"/>.
            </summary>
            <param name="filePath">Path to read the data from.</param>
        </member>
        <member name="T:FalconDatabase.Files.DDPTable">
            <summary>
            The Dirty Data Priority Database contained in the FALCON4_DDP.xml File.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.DDPTable.Priorities">
            <summary>
            Collection of <see cref="T:FalconDatabase.Files.DDPTable" /> Entries exported from the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.DDPTable.PriorityDataTable">
            <summary>
            Aircraft Component of the Database in Raw Data Format.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.DDPTable.IsDefaultInitialization">
            <summary>
            <para>When <see langword="true"/>, indicates this <see cref="T:Utilities.AppFile"/> was successfully loaded from the file.</para>
            <para><see langword="false"/> indicates there were no values in the initialization data used for this <see cref="T:Utilities.AppFile"/> object and empty or default values were loaded instead.</para>
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.DDPTable.Read(System.String)">
            <summary>
            Processes the XML Data in <paramref name="data"/> and attempts to convert it into a <see cref="T:System.Data.DataTable"/> with values read from <paramref name="data"/>.
            </summary>
            <param name="data">XML Data read from a Database File in the ..\TerrData\Objects\ Directory.</param>
            <returns><see langword="true"/> if the File is successfully read and parsed. Otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:FalconDatabase.Files.DDPTable.Write">
            <summary>
            Formats the File Contents into bytes for writing to disk.
            </summary>
            <returns><see cref="T:System.Byte"/> array suitable for writing to a file.</returns>
        </member>
        <member name="M:FalconDatabase.Files.DDPTable.ToString">
            <summary>
            Formats the Data in this Table for Generic Text Output.
            </summary>
            <returns><para><see cref="T:System.String"/> object with the data from this object.</para>
            <para>NOTE: This does not format the Database file for XML Output.</para></returns>
        </member>
        <member name="M:FalconDatabase.Files.DDPTable.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Files.DDPTable"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.DDPTable.#ctor(System.String)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Files.DDPTable"/> component of the Database with the data contained in the file at <paramref name="filePath"/>.
            </summary>
            <param name="filePath">Path to read the data from.</param>
        </member>
        <member name="T:FalconDatabase.Files.FeatureTable">
            <summary>
            The Feature Database contained in the FALCON4_FCD.xml File.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.FeatureTable.Features">
            <summary>
            Collection of <see cref="T:FalconDatabase.Objects.Components.FeatureDefinition" /> Entries exported from the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.FeatureTable.FeatureDataTable">
            <summary>
            Aircraft Component of the Database in Raw Data Format.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.FeatureTable.IsDefaultInitialization">
            <summary>
            <para>When <see langword="true"/>, indicates this <see cref="T:Utilities.AppFile"/> was successfully loaded from the file.</para>
            <para><see langword="false"/> indicates there were no values in the initialization data used for this <see cref="T:Utilities.AppFile"/> object and empty or default values were loaded instead.</para>
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.FeatureTable.Read(System.String)">
            <summary>
            Processes the XML Data in <paramref name="data"/> and attempts to convert it into a <see cref="T:System.Data.DataTable"/> with values read from <paramref name="data"/>.
            </summary>
            <param name="data">XML Data read from a Database File in the ..\TerrData\Objects\ Directory.</param>
            <returns><see langword="true"/> if the File is successfully read and parsed. Otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:FalconDatabase.Files.FeatureTable.Write">
            <summary>
            Formats the File Contents into bytes for writing to disk.
            </summary>
            <returns><see cref="T:System.Byte"/> array suitable for writing to a file.</returns>
        </member>
        <member name="M:FalconDatabase.Files.FeatureTable.ToString">
            <summary>
            Formats the Data in this Table for Generic Text Output.
            </summary>
            <returns><para><see cref="T:System.String"/> object with the data from this object.</para>
            <para>NOTE: This does not format the Database file for XML Output.</para></returns>
        </member>
        <member name="M:FalconDatabase.Files.FeatureTable.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Files.FeatureTable"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.FeatureTable.#ctor(System.String)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Files.FeatureTable"/> component of the Database with the data contained in the file at <paramref name="filePath"/>.
            </summary>
            <param name="filePath">Path to read the data from.</param>
        </member>
        <member name="T:FalconDatabase.Files.IRSensorTable">
            <summary>
            The IR Sensor Database contained in the FALCON4_ICD.xml File.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.IRSensorTable.IRSensors">
            <summary>
            Collection of <see cref="T:FalconDatabase.Objects.Components.IRSensorDefinition" /> Entries exported from the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.IRSensorTable.IRSensortDataTable">
            <summary>
            Aircraft Component of the Database in Raw Data Format.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.IRSensorTable.IsDefaultInitialization">
            <summary>
            <para>When <see langword="true"/>, indicates this <see cref="T:Utilities.AppFile"/> was successfully loaded from the file.</para>
            <para><see langword="false"/> indicates there were no values in the initialization data used for this <see cref="T:Utilities.AppFile"/> object and empty or default values were loaded instead.</para>
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.IRSensorTable.Read(System.String)">
            <summary>
            Processes the XML Data in <paramref name="data"/> and attempts to convert it into a <see cref="T:System.Data.DataTable"/> with values read from <paramref name="data"/>.
            </summary>
            <param name="data">XML Data read from a Database File in the ..\TerrData\Objects\ Directory.</param>
            <returns><see langword="true"/> if the File is successfully read and parsed. Otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:FalconDatabase.Files.IRSensorTable.Write">
            <summary>
            Formats the File Contents into bytes for writing to disk.
            </summary>
            <returns><see cref="T:System.Byte"/> array suitable for writing to a file.</returns>
        </member>
        <member name="M:FalconDatabase.Files.IRSensorTable.ToString">
            <summary>
            Formats the Data in this Table for Generic Text Output.
            </summary>
            <returns><para><see cref="T:System.String"/> object with the data from this object.</para>
            <para>NOTE: This does not format the Database file for XML Output.</para></returns>
        </member>
        <member name="M:FalconDatabase.Files.IRSensorTable.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Files.IRSensorTable"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.IRSensorTable.#ctor(System.String)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Files.IRSensorTable"/> component of the Database with the data contained in the file at <paramref name="filePath"/>.
            </summary>
            <param name="filePath">Path to read the data from.</param>
        </member>
        <member name="T:FalconDatabase.Files.ObjectiveTable">
            <summary>
            An Objective in the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.ObjectiveTable.Objectives">
            <summary>
            A Collection of <see cref="T:FalconDatabase.Objects.Components.ObjectiveDefinition"/> objects.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.ObjectiveTable.ObjectiveDataSet">
            <summary>
            A <see cref="T:System.Data.DataSet"/> with all of the Objective Data.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.ObjectiveTable.IsDefaultInitialization">
            <summary>
            <para>When <see langword="true"/>, indicates this <see cref="T:Utilities.AppFile"/> was successfully loaded from the file.</para>
            <para><see langword="false"/> indicates there were no values in the initialization data used for this <see cref="T:Utilities.AppFile"/> object and empty or default values were loaded instead.</para>
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.ObjectiveTable.Read(System.String)">
            <summary>
            Processes the XML Data in <paramref name="data"/> and attempts to convert it into a <see cref="T:System.Data.DataTable"/> with values read from <paramref name="data"/>.
            </summary>
            <param name="data">XML Data read from a Database File in the ..\TerrData\Objects\ Directory.</param>
            <returns><see langword="true"/> if the File is successfully read and parsed. Otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:FalconDatabase.Files.ObjectiveTable.Write">
            <summary>
            Formats the File Contents into bytes for writing to disk.
            </summary>
            <returns><see cref="T:System.Byte"/> array suitable for writing to a file.</returns>
        </member>
        <member name="M:FalconDatabase.Files.ObjectiveTable.ToString">
            <summary>
            Formats the Data in this Table for Generic Text Output.
            </summary>
            <returns><para><see cref="T:System.String"/> object with the data from this object.</para>
            <para>NOTE: This does not format the Database file for XML Output.</para></returns>
        </member>
        <member name="M:FalconDatabase.Files.ObjectiveTable.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Files.ObjectiveTable"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.ObjectiveTable.#ctor(System.String)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Files.ObjectiveTable"/> component of the Database with the data contained in the file at <paramref name="filePath"/>.
            </summary>
            <param name="filePath">Path to read the data from.</param>
        </member>
        <member name="T:FalconDatabase.Files.RadarSensorTable">
            <summary>
            The Radar Sensor and RWR Database contained in the FALCON4_RWD.xml File.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.RadarSensorTable.RadarSensors">
            <summary>
            Collection of <see cref="T:FalconDatabase.Objects.Components.RadarSensorDefinition" /> Entries exported from the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.RadarSensorTable.RadarSensorDataTable">
            <summary>
            Aircraft Component of the Database in Raw Data Format.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.RadarSensorTable.IsDefaultInitialization">
            <summary>
            <para>When <see langword="true"/>, indicates this <see cref="T:Utilities.AppFile"/> was successfully loaded from the file.</para>
            <para><see langword="false"/> indicates there were no values in the initialization data used for this <see cref="T:Utilities.AppFile"/> object and empty or default values were loaded instead.</para>
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.RadarSensorTable.Read(System.String)">
            <summary>
            Processes the XML Data in <paramref name="data"/> and attempts to convert it into a <see cref="T:System.Data.DataTable"/> with values read from <paramref name="data"/>.
            </summary>
            <param name="data">XML Data read from a Database File in the ..\TerrData\Objects\ Directory.</param>
            <returns><see langword="true"/> if the File is successfully read and parsed. Otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:FalconDatabase.Files.RadarSensorTable.Write">
            <summary>
            Formats the File Contents into bytes for writing to disk.
            </summary>
            <returns><see cref="T:System.Byte"/> array suitable for writing to a file.</returns>
        </member>
        <member name="M:FalconDatabase.Files.RadarSensorTable.ToString">
            <summary>
            Formats the Data in this Table for Generic Text Output.
            </summary>
            <returns><para><see cref="T:System.String"/> object with the data from this object.</para>
            <para>NOTE: This does not format the Database file for XML Output.</para></returns>
        </member>
        <member name="M:FalconDatabase.Files.RadarSensorTable.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Files.RadarSensorTable"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.RadarSensorTable.#ctor(System.String)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Files.RadarSensorTable"/> component of the Database with the data contained in the file at <paramref name="filePath"/>.
            </summary>
            <param name="filePath">Path to read the data from.</param>
        </member>
        <member name="T:FalconDatabase.Files.RadarTable">
            <summary>
            The Radar Database contained in the FALCON4_RCD.xml File.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.RadarTable.Radars">
            <summary>
            Collection of <see cref="T:FalconDatabase.Objects.Components.RadarDefinition" /> Entries exported from the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.RadarTable.RadartDataTable">
            <summary>
            Aircraft Component of the Database in Raw Data Format.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.RadarTable.IsDefaultInitialization">
            <summary>
            <para>When <see langword="true"/>, indicates this <see cref="T:Utilities.AppFile"/> was successfully loaded from the file.</para>
            <para><see langword="false"/> indicates there were no values in the initialization data used for this <see cref="T:Utilities.AppFile"/> object and empty or default values were loaded instead.</para>
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.RadarTable.Read(System.String)">
            <summary>
            Processes the XML Data in <paramref name="data"/> and attempts to convert it into a <see cref="T:System.Data.DataTable"/> with values read from <paramref name="data"/>.
            </summary>
            <param name="data">XML Data read from a Database File in the ..\TerrData\Objects\ Directory.</param>
            <returns><see langword="true"/> if the File is successfully read and parsed. Otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:FalconDatabase.Files.RadarTable.Write">
            <summary>
            Formats the File Contents into bytes for writing to disk.
            </summary>
            <returns><see cref="T:System.Byte"/> array suitable for writing to a file.</returns>
        </member>
        <member name="M:FalconDatabase.Files.RadarTable.ToString">
            <summary>
            Formats the Data in this Table for Generic Text Output.
            </summary>
            <returns><para><see cref="T:System.String"/> object with the data from this object.</para>
            <para>NOTE: This does not format the Database file for XML Output.</para></returns>
        </member>
        <member name="M:FalconDatabase.Files.RadarTable.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Files.RadarTable"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.RadarTable.#ctor(System.String)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Files.RadarTable"/> component of the Database with the data contained in the file at <paramref name="filePath"/>.
            </summary>
            <param name="filePath">Path to read the data from.</param>
        </member>
        <member name="T:FalconDatabase.Files.RocketTable">
            <summary>
            The Rocket Database contained in the FALCON4_RKT.xml File.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.RocketTable.Rockets">
            <summary>
            Collection of <see cref="T:FalconDatabase.Objects.Components.RocketDefinition" /> Entries exported from the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.RocketTable.RocketDataTable">
            <summary>
            Aircraft Component of the Database in Raw Data Format.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.RocketTable.IsDefaultInitialization">
            <summary>
            <para>When <see langword="true"/>, indicates this <see cref="T:Utilities.AppFile"/> was successfully loaded from the file.</para>
            <para><see langword="false"/> indicates there were no values in the initialization data used for this <see cref="T:Utilities.AppFile"/> object and empty or default values were loaded instead.</para>
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.RocketTable.Read(System.String)">
            <summary>
            Processes the XML Data in <paramref name="data"/> and attempts to convert it into a <see cref="T:System.Data.DataTable"/> with values read from <paramref name="data"/>.
            </summary>
            <param name="data">XML Data read from a Database File in the ..\TerrData\Objects\ Directory.</param>
            <returns><see langword="true"/> if the File is successfully read and parsed. Otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:FalconDatabase.Files.RocketTable.Write">
            <summary>
            Formats the File Contents into bytes for writing to disk.
            </summary>
            <returns><see cref="T:System.Byte"/> array suitable for writing to a file.</returns>
        </member>
        <member name="M:FalconDatabase.Files.RocketTable.ToString">
            <summary>
            Formats the Data in this Table for Generic Text Output.
            </summary>
            <returns><para><see cref="T:System.String"/> object with the data from this object.</para>
            <para>NOTE: This does not format the Database file for XML Output.</para></returns>
        </member>
        <member name="M:FalconDatabase.Files.RocketTable.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Files.RocketTable"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.RocketTable.#ctor(System.String)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Files.RocketTable"/> component of the Database with the data contained in the file at <paramref name="filePath"/>.
            </summary>
            <param name="filePath">Path to read the data from.</param>
        </member>
        <member name="T:FalconDatabase.Files.SimWeaponTable">
            <summary>
            The Sim Weapon Database contained in the FALCON4_SWD.xml File.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.SimWeaponTable.SimWeaponData">
            <summary>
            Collection of <see cref="T:FalconDatabase.Objects.Components.SimWeaponDefinition" /> Entries exported from the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.SimWeaponTable.SimWeaponDataTable">
            <summary>
            Aircraft Component of the Database in Raw Data Format.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.SimWeaponTable.IsDefaultInitialization">
            <summary>
            <para>When <see langword="true"/>, indicates this <see cref="T:Utilities.AppFile"/> was successfully loaded from the file.</para>
            <para><see langword="false"/> indicates there were no values in the initialization data used for this <see cref="T:Utilities.AppFile"/> object and empty or default values were loaded instead.</para>
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.SimWeaponTable.Read(System.String)">
            <summary>
            Processes the XML Data in <paramref name="data"/> and attempts to convert it into a <see cref="T:System.Data.DataTable"/> with values read from <paramref name="data"/>.
            </summary>
            <param name="data">XML Data read from a Database File in the ..\TerrData\Objects\ Directory.</param>
            <returns><see langword="true"/> if the File is successfully read and parsed. Otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:FalconDatabase.Files.SimWeaponTable.Write">
            <summary>
            Formats the File Contents into bytes for writing to disk.
            </summary>
            <returns><see cref="T:System.Byte"/> array suitable for writing to a file.</returns>
        </member>
        <member name="M:FalconDatabase.Files.SimWeaponTable.ToString">
            <summary>
            Formats the Data in this Table for Generic Text Output.
            </summary>
            <returns><para><see cref="T:System.String"/> object with the data from this object.</para>
            <para>NOTE: This does not format the Database file for XML Output.</para></returns>
        </member>
        <member name="M:FalconDatabase.Files.SimWeaponTable.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Files.SimWeaponTable"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.SimWeaponTable.#ctor(System.String)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Files.SimWeaponTable"/> component of the Database with the data contained in the file at <paramref name="filePath"/>.
            </summary>
            <param name="filePath">Path to read the data from.</param>
        </member>
        <member name="T:FalconDatabase.Files.SquadronStoresTable">
            <summary>
            The Squadron Stores Database contained in the FALCON4_SSD.xml File.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.SquadronStoresTable.SquadronStores">
            <summary>
            Collection of <see cref="T:FalconDatabase.Objects.Components.SquadronStoresDefinition" /> Entries exported from the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.SquadronStoresTable.SquadronStoresDataTable">
            <summary>
            Aircraft Component of the Database in Raw Data Format.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.SquadronStoresTable.IsDefaultInitialization">
            <summary>
            <para>When <see langword="true"/>, indicates this <see cref="T:Utilities.AppFile"/> was successfully loaded from the file.</para>
            <para><see langword="false"/> indicates there were no values in the initialization data used for this <see cref="T:Utilities.AppFile"/> object and empty or default values were loaded instead.</para>
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.SquadronStoresTable.Read(System.String)">
            <summary>
            Processes the XML Data in <paramref name="data"/> and attempts to convert it into a <see cref="T:System.Data.DataTable"/> with values read from <paramref name="data"/>.
            </summary>
            <param name="data">XML Data read from a Database File in the ..\TerrData\Objects\ Directory.</param>
            <returns><see langword="true"/> if the File is successfully read and parsed. Otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:FalconDatabase.Files.SquadronStoresTable.Write">
            <summary>
            Formats the File Contents into bytes for writing to disk.
            </summary>
            <returns><see cref="T:System.Byte"/> array suitable for writing to a file.</returns>
        </member>
        <member name="M:FalconDatabase.Files.SquadronStoresTable.ToString">
            <summary>
            Formats the Data in this Table for Generic Text Output.
            </summary>
            <returns><para><see cref="T:System.String"/> object with the data from this object.</para>
            <para>NOTE: This does not format the Database file for XML Output.</para></returns>
        </member>
        <member name="M:FalconDatabase.Files.SquadronStoresTable.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Files.SquadronStoresTable"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.SquadronStoresTable.#ctor(System.String)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Files.SquadronStoresTable"/> component of the Database with the data contained in the file at <paramref name="filePath"/>.
            </summary>
            <param name="filePath">Path to read the data from.</param>
        </member>
        <member name="T:FalconDatabase.Files.UnitTable">
            <summary>
            The Unit Database contained in the FALCON4_UCD.xml File.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.UnitTable.Units">
            <summary>
            Collection of <see cref="T:FalconDatabase.Objects.Components.UnitDefinition" /> Entries exported from the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.UnitTable.UnitDataTable">
            <summary>
            Aircraft Component of the Database in Raw Data Format.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.UnitTable.IsDefaultInitialization">
            <summary>
            <para>When <see langword="true"/>, indicates this <see cref="T:Utilities.AppFile"/> was successfully loaded from the file.</para>
            <para><see langword="false"/> indicates there were no values in the initialization data used for this <see cref="T:Utilities.AppFile"/> object and empty or default values were loaded instead.</para>
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.UnitTable.Read(System.String)">
            <summary>
            Processes the XML Data in <paramref name="data"/> and attempts to convert it into a <see cref="T:System.Data.DataTable"/> with values read from <paramref name="data"/>.
            </summary>
            <param name="data">XML Data read from a Database File in the ..\TerrData\Objects\ Directory.</param>
            <returns><see langword="true"/> if the File is successfully read and parsed. Otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:FalconDatabase.Files.UnitTable.Write">
            <summary>
            Formats the File Contents into bytes for writing to disk.
            </summary>
            <returns><see cref="T:System.Byte"/> array suitable for writing to a file.</returns>
        </member>
        <member name="M:FalconDatabase.Files.UnitTable.ToString">
            <summary>
            Formats the Data in this Table for Generic Text Output.
            </summary>
            <returns><para><see cref="T:System.String"/> object with the data from this object.</para>
            <para>NOTE: This does not format the Database file for XML Output.</para></returns>
        </member>
        <member name="M:FalconDatabase.Files.UnitTable.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Files.UnitTable"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.UnitTable.#ctor(System.String)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Files.UnitTable"/> component of the Database with the data contained in the file at <paramref name="filePath"/>.
            </summary>
            <param name="filePath">Path to read the data from.</param>
        </member>
        <member name="T:FalconDatabase.Files.VehicleTable">
            <summary>
            A Vehicle in the Campaign.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.VehicleTable.Vehicles">
            <summary>
            Collection of <see cref="T:FalconDatabase.Objects.Components.VehicleDefinition" /> Entries exported from the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.VehicleTable.VehicleDataTable">
            <summary>
            Aircraft Component of the Database in Raw Data Format.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.VehicleTable.IsDefaultInitialization">
            <summary>
            <para>When <see langword="true"/>, indicates this <see cref="T:Utilities.AppFile"/> was successfully loaded from the file.</para>
            <para><see langword="false"/> indicates there were no values in the initialization data used for this <see cref="T:Utilities.AppFile"/> object and empty or default values were loaded instead.</para>
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.VehicleTable.Read(System.String)">
            <summary>
            Processes the XML Data in <paramref name="data"/> and attempts to convert it into a <see cref="T:System.Data.DataTable"/> with values read from <paramref name="data"/>.
            </summary>
            <param name="data">XML Data read from a Database File in the ..\TerrData\Objects\ Directory.</param>
            <returns><see langword="true"/> if the File is successfully read and parsed. Otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:FalconDatabase.Files.VehicleTable.Write">
            <summary>
            Formats the File Contents into bytes for writing to disk.
            </summary>
            <returns><see cref="T:System.Byte"/> array suitable for writing to a file.</returns>
        </member>
        <member name="M:FalconDatabase.Files.VehicleTable.ToString">
            <summary>
            Formats the Data in this Table for Generic Text Output.
            </summary>
            <returns><para><see cref="T:System.String"/> object with the data from this object.</para>
            <para>NOTE: This does not format the Database file for XML Output.</para></returns>
        </member>
        <member name="M:FalconDatabase.Files.VehicleTable.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Files.VehicleTable"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.VehicleTable.#ctor(System.String)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Files.VehicleTable"/> component of the Database with the data contained in the file at <paramref name="filePath"/>.
            </summary>
            <param name="filePath">Path to read the data from.</param>
        </member>
        <member name="T:FalconDatabase.Files.VisualSensorTable">
            <summary>
            Visual Sensor Table in the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.VisualSensorTable.VisualSensors">
            <summary>
            Collection of <see cref="T:FalconDatabase.Objects.Components.VisualSensorDefinition" /> Entries exported from the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.VisualSensorTable.VisualSensorDataTable">
            <summary>
            Aircraft Component of the Database in Raw Data Format.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.VisualSensorTable.IsDefaultInitialization">
            <summary>
            <para>When <see langword="true"/>, indicates this <see cref="T:Utilities.AppFile"/> was successfully loaded from the file.</para>
            <para><see langword="false"/> indicates there were no values in the initialization data used for this <see cref="T:Utilities.AppFile"/> object and empty or default values were loaded instead.</para>
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.VisualSensorTable.Read(System.String)">
            <summary>
            Processes the XML Data in <paramref name="data"/> and attempts to convert it into a <see cref="T:System.Data.DataTable"/> with values read from <paramref name="data"/>.
            </summary>
            <param name="data">XML Data read from a Database File in the ..\TerrData\Objects\ Directory.</param>
            <returns><see langword="true"/> if the File is successfully read and parsed. Otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:FalconDatabase.Files.VisualSensorTable.Write">
            <summary>
            Formats the File Contents into bytes for writing to disk.
            </summary>
            <returns><see cref="T:System.Byte"/> array suitable for writing to a file.</returns>
        </member>
        <member name="M:FalconDatabase.Files.VisualSensorTable.ToString">
            <summary>
            Formats the Data in this Table for Generic Text Output.
            </summary>
            <returns><para><see cref="T:System.String"/> object with the data from this object.</para>
            <para>NOTE: This does not format the Database file for XML Output.</para></returns>
        </member>
        <member name="M:FalconDatabase.Files.VisualSensorTable.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Files.VisualSensorTable"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.VisualSensorTable.#ctor(System.String)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Files.VisualSensorTable"/> component of the Database with the data contained in the file at <paramref name="filePath"/>.
            </summary>
            <param name="filePath">Path to read the data from.</param>
        </member>
        <member name="T:FalconDatabase.Files.WeaponLoadTable">
            <summary>
            Weapon Hardpoint and Rack Component of the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.WeaponLoadTable.WeaponLoads">
            <summary>
            Collection of <see cref="T:FalconDatabase.Objects.Components.WeaponLoadDefinition" /> Entries exported from the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.WeaponLoadTable.WeaponLoadDataTable">
            <summary>
            Aircraft Component of the Database in Raw Data Format.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.WeaponLoadTable.IsDefaultInitialization">
            <summary>
            <para>When <see langword="true"/>, indicates this <see cref="T:Utilities.AppFile"/> was successfully loaded from the file.</para>
            <para><see langword="false"/> indicates there were no values in the initialization data used for this <see cref="T:Utilities.AppFile"/> object and empty or default values were loaded instead.</para>
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.WeaponLoadTable.Read(System.String)">
            <summary>
            Processes the XML Data in <paramref name="data"/> and attempts to convert it into a <see cref="T:System.Data.DataTable"/> with values read from <paramref name="data"/>.
            </summary>
            <param name="data">XML Data read from a Database File in the ..\TerrData\Objects\ Directory.</param>
            <returns><see langword="true"/> if the File is successfully read and parsed. Otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:FalconDatabase.Files.WeaponLoadTable.Write">
            <summary>
            Formats the File Contents into bytes for writing to disk.
            </summary>
            <returns><see cref="T:System.Byte"/> array suitable for writing to a file.</returns>
        </member>
        <member name="M:FalconDatabase.Files.WeaponLoadTable.ToString">
            <summary>
            Formats the Data in this Table for Generic Text Output.
            </summary>
            <returns><para><see cref="T:System.String"/> object with the data from this object.</para>
            <para>NOTE: This does not format the Database file for XML Output.</para></returns>
        </member>
        <member name="M:FalconDatabase.Files.WeaponLoadTable.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Files.WeaponLoadTable"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.WeaponLoadTable.#ctor(System.String)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Files.WeaponLoadTable"/> component of the Database with the data contained in the file at <paramref name="filePath"/>.
            </summary>
            <param name="filePath">Path to read the data from.</param>
        </member>
        <member name="T:FalconDatabase.Files.WeaponTable">
            <summary>
            Weapon Table in the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.WeaponTable.Weapons">
            <summary>
            Collection of <see cref="T:FalconDatabase.Objects.Components.WeaponDefinition" /> Entries exported from the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.WeaponTable.WeaponDataTable">
            <summary>
            Aircraft Component of the Database in Raw Data Format.
            </summary>
        </member>
        <member name="P:FalconDatabase.Files.WeaponTable.IsDefaultInitialization">
            <summary>
            <para>When <see langword="true"/>, indicates this <see cref="T:Utilities.AppFile"/> was successfully loaded from the file.</para>
            <para><see langword="false"/> indicates there were no values in the initialization data used for this <see cref="T:Utilities.AppFile"/> object and empty or default values were loaded instead.</para>
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.WeaponTable.Read(System.String)">
            <summary>
            Processes the XML Data in <paramref name="data"/> and attempts to convert it into a <see cref="T:System.Data.DataTable"/> with values read from <paramref name="data"/>.
            </summary>
            <param name="data">XML Data read from a Database File in the ..\TerrData\Objects\ Directory.</param>
            <returns><see langword="true"/> if the File is successfully read and parsed. Otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:FalconDatabase.Files.WeaponTable.Write">
            <summary>
            Formats the File Contents into bytes for writing to disk.
            </summary>
            <returns><see cref="T:System.Byte"/> array suitable for writing to a file.</returns>
        </member>
        <member name="M:FalconDatabase.Files.WeaponTable.ToString">
            <summary>
            Formats the Data in this Table for Generic Text Output.
            </summary>
            <returns><para><see cref="T:System.String"/> object with the data from this object.</para>
            <para>NOTE: This does not format the Database file for XML Output.</para></returns>
        </member>
        <member name="M:FalconDatabase.Files.WeaponTable.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Files.WeaponTable"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Files.WeaponTable.#ctor(System.String)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Files.WeaponTable"/> component of the Database with the data contained in the file at <paramref name="filePath"/>.
            </summary>
            <param name="filePath">Path to read the data from.</param>
        </member>
        <member name="T:FalconDatabase.Internal.DamageTypes">
            <summary>
            Collection of Values that pertain to each Damage Type.
            This is used often in the database to evaulate how much weak a
            building or vehicle is against a specific type of damage.
            </summary>
        </member>
        <member name="P:FalconDatabase.Internal.DamageTypes.NoDamage">
            <summary>
            Weapon causes no significant damage.
            </summary>
        </member>
        <member name="P:FalconDatabase.Internal.DamageTypes.Penetration">
            <summary>
            Weapon causes penetration damage. 
            Effective against hardened targets.
            </summary>
        </member>
        <member name="P:FalconDatabase.Internal.DamageTypes.HighExplosive">
            <summary>
            Weapon detonates an explosion. 
            Effective against soft or area targets.
            </summary>
        </member>
        <member name="P:FalconDatabase.Internal.DamageTypes.Heave">
            <summary>
            Weapon causes heave damage leaving craters. 
            Effective against Runways.
            </summary>
        </member>
        <member name="P:FalconDatabase.Internal.DamageTypes.Incendiary">
            <summary>
            Weapon causes heat or burning damage. 
            Effective against troops and other soft targets.
            </summary>
        </member>
        <member name="P:FalconDatabase.Internal.DamageTypes.Proximity">
            <summary>
            Weapon detonates an explosion when it reaches a certain proximity. 
            Effective against fast moving targets, such as aircraft.
            </summary>
        </member>
        <member name="P:FalconDatabase.Internal.DamageTypes.Kinetic">
            <summary>
            Weapon fires a projective to damage the target with an impact.
            Effective against soft and moderately hardened targets.
            </summary>
        </member>
        <member name="P:FalconDatabase.Internal.DamageTypes.Hydrostatic">
            <summary>
            Weapon causes damage by detonating an underwater explosion.
            Effective against sea vehicles..
            </summary>
        </member>
        <member name="P:FalconDatabase.Internal.DamageTypes.Chemical">
            <summary>
            Weapon causes burning damage or erodes the surface of the target.
            Effective against soft or moderately hardened targets.
            </summary>
        </member>
        <member name="P:FalconDatabase.Internal.DamageTypes.Nuclear">
            <summary>
            Weapon causes significant thermal and kinetic damage through detonation of a Nuclear Device.
            </summary>
        </member>
        <member name="P:FalconDatabase.Internal.DamageTypes.Other">
            <summary>
            Weapon causes general, unspecified damage to the target.
            </summary>
        </member>
        <member name="M:FalconDatabase.Internal.DamageTypes.ToString">
            <summary>
            <para>Formats the data contained within this object into Readable Text.</para>
            <para>Readable Text does not always match the underlying file format and should not be used to save text based files such as .xml, .ini, .lst, or .txtpb files.</para>
            <para>Instead, use Write() to format all text or binary data for writing to a file.</para>
            </summary>
            <returns>A formatted <see cref="T:System.String"/> with the Data contained within the object.</returns>
        </member>
        <member name="M:FalconDatabase.Internal.DamageTypes.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Internal.DamageTypes"/> object.
            </summary>
        </member>
        <member name="T:FalconDatabase.Internal.MovementTypes">
            <summary>
            Collection of Values that pertain to each Movement Type.
            This is used often in the database to evaulate wepon or vehicle effectiveness
            against each type of Movement.
            </summary>
        </member>
        <member name="P:FalconDatabase.Internal.MovementTypes.NoMovement">
            <summary>
            Object is stationary and cannot move.
            </summary>
        </member>
        <member name="P:FalconDatabase.Internal.MovementTypes.Foot">
            <summary>
            Object is a pedestrian and moves by using it's feet.
            </summary>
        </member>
        <member name="P:FalconDatabase.Internal.MovementTypes.Wheeled">
            <summary>
            Object uses Wheels to travel across land.
            </summary>
        </member>
        <member name="P:FalconDatabase.Internal.MovementTypes.Tracked">
            <summary>
            Object used a large, flxible component wrapped around several wheels to move across land with better traction.
            </summary>
        </member>
        <member name="P:FalconDatabase.Internal.MovementTypes.LowAir">
            <summary>
            Object travels through the air at low altitudes, such as a helicopter.
            </summary>
        </member>
        <member name="P:FalconDatabase.Internal.MovementTypes.Air">
            <summary>
            Object travels through the air at various high and low altitudes.
            </summary>
        </member>
        <member name="P:FalconDatabase.Internal.MovementTypes.Naval">
            <summary>
            Object moves thorugh the water.
            </summary>
        </member>
        <member name="P:FalconDatabase.Internal.MovementTypes.Rail">
            <summary>
            Object travels along tracks or rails.
            </summary>
        </member>
        <member name="M:FalconDatabase.Internal.MovementTypes.ToString">
            <summary>
            <para>Formats the data contained within this object into Readable Text.</para>
            <para>Readable Text does not always match the underlying file format and should not be used to save text based files such as .xml, .ini, .lst, or .txtpb files.</para>
            <para>Instead, use Write() to format all text or binary data for writing to a file.</para>
            </summary>
            <returns>A formatted <see cref="T:System.String"/> with the Data contained within the object.</returns>
        </member>
        <member name="M:FalconDatabase.Internal.MovementTypes.#ctor">
            <summary>
            Default constructor for the <see cref="T:FalconDatabase.Internal.MovementTypes"/> object.
            </summary>
        </member>
        <member name="T:FalconDatabase.Objects.Components.AircraftDefinition">
            <summary>
            An Aircraft Entry in the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.AircraftDefinition.ID">
            <summary>
            ID of this Aircraft Definition in the Aircraft Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.AircraftDefinition.CombatClass">
            <summary>
            Combat Class of the Aircraft.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.AircraftDefinition.AircraftID">
            <summary>
            Index into the Aircraft Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.AircraftDefinition.IRSignatureID">
            <summary>
            Index into the Signature Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.AircraftDefinition.Sensors">
            <summary>
            Collection of Sensor Type and Specific Sensors on this aircraft.
            Item1 = SensorType Enum Sensor Type,. Item2 = ID of Sensor in the Corresponding Sensor Table
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.AircraftDefinition.ToString">
            <summary>
            <para>Formats the data contained within this object into Readable Text.</para>
            <para>Readable Text does not always match the underlying file format and should not be used to save text based files such as .xml, .ini, .lst, or .txtpb files.</para>
            <para>Instead, use Write() to format all text or binary data for writing to a file.</para>
            </summary>
            <returns>A formatted <see cref="T:System.String"/> with the Data contained within the object.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.AircraftDefinition.ToDataRow">
            <summary>
            Formats the <see cref="T:FalconDatabase.Objects.Components.AircraftDefinition"/> as a <see cref="T:System.Data.DataRow"/>.
            </summary>
            <returns><see cref="T:System.Data.DataRow"/> object conforming to the ACD.xsd Schema in the XMLSchemas Directory.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.AircraftDefinition.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Objects.Components.AircraftDefinition"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.AircraftDefinition.#ctor(System.Data.DataRow)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Objects.Components.AircraftDefinition"/> object with a <see cref="T:System.Data.DataRow"/> that conforms to the ACD.xsd Schema File.
            </summary>
            <param name="row"></param>
        </member>
        <member name="T:FalconDatabase.Objects.Components.ClassEntityDefinition">
            <summary>
            Entity Class Type Entry in the Database Class Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ID">
            <summary>
            ID of this Class Table Entry.
            </summary>        
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassData">
            <summary>
            Contains Hierarchy Data for the Class Definition.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.UpdateData">
            <summary>
            Defines the Update Data for the Campaign and Graphics Engine.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.EntityData">
            <summary>
            Contains data about the Visual aspects of the Class Entity.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.Textures">
            <summary>
            Contains the Texture Data for this Object in various states in the 3D World.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ExternalData">
            <summary>
            Contains Data about references to external tables or files for this Entity.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ClassEntityDefinition.ToString">
            <summary>
            <para>Formats the data contained within this object into Readable Text.</para>
            <para>Readable Text does not always match the underlying file format and should not be used to save text based files such as .xml, .ini, .lst, or .txtpb files.</para>
            <para>Instead, use Write() to format all text or binary data for writing to a file.</para>
            </summary>
            <returns>A formatted <see cref="T:System.String"/> with the Data contained within the object.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ClassEntityDefinition.ToDataRow">
            <summary>
            Formats the <see cref="T:FalconDatabase.Objects.Components.ClassEntityDefinition"/> as a <see cref="T:System.Data.DataRow"/>.
            </summary>
            <returns><see cref="T:System.Data.DataRow"/> object conforming to the CT.xsd Schema in the XMLSchemas Directory.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ClassEntityDefinition.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Objects.Components.ClassEntityDefinition"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ClassEntityDefinition.#ctor(System.Data.DataRow)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Objects.Components.ClassEntityDefinition"/> object with a <see cref="T:System.Data.DataRow"/> that conforms to the ACD.xsd Schema File.
            </summary>
            <param name="row"></param>
        </member>
        <member name="T:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassCollisionData">
            <summary>
            Collision Type Data--Unused but still stored in the Data Files
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassCollisionData.CollisionType">
            <summary>
            Collision Type.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassCollisionData.CollisionRadius">
            <summary>
            Collision Radius.
            </summary>
        </member>
        <member name="T:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassDataDefinition">
            <summary>
            Database Class Hierarchy
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassDataDefinition.Domain">
            <summary>
            The Domain of this Database Object.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassDataDefinition.Class">
            <summary>
            The Class of this Database Object.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassDataDefinition.Type">
            <summary>
            The Type of this Database Object.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassDataDefinition.SubType">
            <summary>
            The SubType of this Database Object.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassDataDefinition.SpecificType">
            <summary>
            The Specific Type of this Database Object.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassDataDefinition.Owner">
            <summary>
            The Team that Owns this Object.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassDataDefinition.Class_6">
            <summary>
            Unused Placeholder.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassDataDefinition.Class_7">
            <summary>
            Unusued Placeholder.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassDataDefinition.ToString">
            <summary>
            <para>Formats the data contained within this object into Readable Text.</para>
            <para>Readable Text does not always match the underlying file format and should not be used to save text based files such as .xml, .ini, .lst, or .txtpb files.</para>
            <para>Instead, use Write() to format all text or binary data for writing to a file.</para>
            </summary>
            <returns>A formatted <see cref="T:System.String"/> with the Data contained within the object.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassDataDefinition.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassDataDefinition"/> object.
            </summary>
        </member>
        <member name="T:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassGraphicsDefinition">
            <summary>
            Contains data about the Textures used for various states of an object in the 3D World.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassGraphicsDefinition.Normal">
            <summary>
            Default Texture used for an object.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassGraphicsDefinition.Repaired">
            <summary>
            Texture used for a Repaired Object.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassGraphicsDefinition.Damaged">
            <summary>
            Texture used for a Damaged Object.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassGraphicsDefinition.Destroyed">
            <summary>
            Texture used when an Object is completely Destroyed.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassGraphicsDefinition.LeftDestroyed">
            <summary>
            Texture used when an Object is partially destroyed on the Left Side.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassGraphicsDefinition.RightDestroyed">
            <summary>
            Texture used when an Object is partially destroyed on the Right Side.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassGraphicsDefinition.BothDestroyed">
            <summary>
            Texture used when an Object is Destroyed on Multiple Sides but not completely Destroyed.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassGraphicsDefinition.ToString">
            <summary>
            <para>Formats the data contained within this object into Readable Text.</para>
            <para>Readable Text does not always match the underlying file format and should not be used to save text based files such as .xml, .ini, .lst, or .txtpb files.</para>
            <para>Instead, use Write() to format all text or binary data for writing to a file.</para>
            </summary>
            <returns>A formatted <see cref="T:System.String"/> with the Data contained within the object.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassGraphicsDefinition.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassGraphicsDefinition"/> object.
            </summary>
        </member>
        <member name="T:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassGraphicsUpdateDefinition">
            <summary>
            Contains data about the Textures used for various states of an object in the 3D World.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassGraphicsUpdateDefinition.UpdateRate">
            <summary>
            Standard Time between updates for this object in the Campaign Engine.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassGraphicsUpdateDefinition.UpdateTolerance">
            <summary>
            Max Time allowed between updates in the Campaign Engine when Updates are deprioritized.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassGraphicsUpdateDefinition.FineUpdateRange">
            <summary>
            <para>Defines the 3D Bubble of the Object in feet.</para>
            <para>The 3D Bubbles determines when the game switches from 2D Probabalistic Execution to 3D Simulated Execution for an object.
            The Bubble moves with the object and everything within the Bubble will be created an added as part of the 3D Simulation.
            Everything within the Bubble will receive Position Updates from this Object.</para>
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassGraphicsUpdateDefinition.FineUpdateForceRange">
            <summary>
            Smaller Priority Bubble inside the Main bubble that forces Position Updates for other Objects.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassGraphicsUpdateDefinition.FineUpdateMultiplier">
            <summary>
            Factor by which the Update Priority is increased inside the Priority Bubble.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassGraphicsUpdateDefinition.ToString">
            <summary>
            <para>Formats the data contained within this object into Readable Text.</para>
            <para>Readable Text does not always match the underlying file format and should not be used to save text based files such as .xml, .ini, .lst, or .txtpb files.</para>
            <para>Instead, use Write() to format all text or binary data for writing to a file.</para>
            </summary>
            <returns>A formatted <see cref="T:System.String"/> with the Data contained within the object.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassGraphicsUpdateDefinition.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassGraphicsUpdateDefinition"/> object.
            </summary>
        </member>
        <member name="T:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassExternalDataDefinition">
            <summary>
            Contains data about External Reference Data such as Flight or Movement Model Files, or specific data information from other tables in the database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassExternalDataDefinition.EntityClassType">
            <summary>
            Reference to which Data Table within the Database this Class Table Entry is associated with.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassExternalDataDefinition.ClassTypeTableID">
            <summary>
            Index into the respective ClassTypeTable this Entity is associated with.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassExternalDataDefinition.VehicleProfileReferenceFile">
            <summary>
            Contains a reference to an external file that holds Vehicle Physics and Movement Data, such as Flight Models or Ground Vehicle movement profiles.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassExternalDataDefinition.MoverData">
            <summary>
            File Index for Mover Data.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassExternalDataDefinition.ToString">
            <summary>
            <para>Formats the data contained within this object into Readable Text.</para>
            <para>Readable Text does not always match the underlying file format and should not be used to save text based files such as .xml, .ini, .lst, or .txtpb files.</para>
            <para>Instead, use Write() to format all text or binary data for writing to a file.</para>
            </summary>
            <returns>A formatted <see cref="T:System.String"/> with the Data contained within the object.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassExternalDataDefinition.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassExternalDataDefinition"/> object.
            </summary>
        </member>
        <member name="T:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassVisualEntityDefinition">
            <summary>
            Entity Type Class Definition.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassVisualEntityDefinition.DamageSeed">
            <summary>
            Random Seed for Damage calculations.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassVisualEntityDefinition.Hitpoints">
            <summary>
            Current Health of the Entity.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassVisualEntityDefinition.MajorRevisionNumber">
            <summary>
            Entity Major Revision Number.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassVisualEntityDefinition.MinorRevisionNumber">
            <summary>
            Entity Minor Revision Number.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassVisualEntityDefinition.CreatePriority">
            <summary>
            Prioritization value for the Render Engine.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassVisualEntityDefinition.ManagementDomain">
            <summary>
            Management Engine within the Campaign that handles this Entity.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassVisualEntityDefinition.Transferable">
            <summary>
            Indicates if this Entity can be transferred between Objects or Domains.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassVisualEntityDefinition.Private">
            <summary>
            Indicates if this Entity is Private.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassVisualEntityDefinition.Tangible">
            <summary>
            Indicates if this Entity is Tangible.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassVisualEntityDefinition.Collidable">
            <summary>
            Indicates if this Entity causes Collisions.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassVisualEntityDefinition.Global">
            <summary>
            Indicates if this is a Global Object.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassVisualEntityDefinition.Persistent">
            <summary>
            Indicates if this is a Persistent Object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassVisualEntityDefinition.ToString">
            <summary>
            <para>Formats the data contained within this object into Readable Text.</para>
            <para>Readable Text does not always match the underlying file format and should not be used to save text based files such as .xml, .ini, .lst, or .txtpb files.</para>
            <para>Instead, use Write() to format all text or binary data for writing to a file.</para>
            </summary>
            <returns>A formatted <see cref="T:System.String"/> with the Data contained within the object.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassVisualEntityDefinition.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Objects.Components.ClassEntityDefinition.ClassVisualEntityDefinition"/> object.
            </summary>
        </member>
        <member name="T:FalconDatabase.Objects.Components.DirtyDataPriority">
            <summary>
            An DDP Record in the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.DirtyDataPriority.ID">
            <summary>
            Index of this Entry in the Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.DirtyDataPriority.Priority">
            <summary>
            Priority Value.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.DirtyDataPriority.ToString">
            <summary>
            <para>Formats the data contained within this object into Readable Text.</para>
            <para>Readable Text does not always match the underlying file format and should not be used to save text based files such as .xml, .ini, .lst, or .txtpb files.</para>
            <para>Instead, use Write() to format all text or binary data for writing to a file.</para>
            </summary>
            <returns>A formatted <see cref="T:System.String"/> with the Data contained within the object.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.DirtyDataPriority.ToDataRow">
            <summary>
            Formats the <see cref="T:FalconDatabase.Objects.Components.DirtyDataPriority"/> as a <see cref="T:System.Data.DataRow"/>.
            </summary>
            <returns><see cref="T:System.Data.DataRow"/> object conforming to the ACD.xsd Schema in the XMLSchemas Directory.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.DirtyDataPriority.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Objects.Components.DirtyDataPriority"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.DirtyDataPriority.#ctor(System.Data.DataRow)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Objects.Components.DirtyDataPriority"/> object with a <see cref="T:System.Data.DataRow"/> that conforms to the ACD.xsd Schema File.
            </summary>
            <param name="row"></param>
        </member>
        <member name="T:FalconDatabase.Objects.Components.FeatureDefinition">
            <summary>
            Defines a Feature that can be interacted with in the Campaign.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.FeatureDefinition.ID">
            <summary>
            Index of this Feature in the Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.FeatureDefinition.ClassID">
            <summary>
            ID of this Feature.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.FeatureDefinition.RepairTime">
            <summary>
            Time in Hours it takes to repair this item.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.FeatureDefinition.Priority">
            <summary>
            Display Priority used by the Graphics Engine.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.FeatureDefinition.Flags">
            <summary>
            Feature Flags.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.FeatureDefinition.Name">
            <summary>
            Feature Name.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.FeatureDefinition.HitPoints">
            <summary>
            How much damage the Feature can sustain before being destroyed.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.FeatureDefinition.RampHeight">
            <summary>
            Height of Vehicle Ramp if one exists.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.FeatureDefinition.RampAngle">
            <summary>
            Angle of Vehicle Ramp if one exists.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.FeatureDefinition.RadarType">
            <summary>
            Radar Id of an attached Radar Object if one exists.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.FeatureDefinition.Detection">
            <summary>
            Collection of Detection Ranges for each Movement Type.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.FeatureDefinition.DamageModifiers">
            <summary>
            Collection of Damage Modifiers for each Damage Type.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.FeatureDefinition.ToString">
            <summary>
            <para>Formats the data contained within this object into Readable Text.</para>
            <para>Readable Text does not always match the underlying file format and should not be used to save text based files such as .xml, .ini, .lst, or .txtpb files.</para>
            <para>Instead, use Write() to format all text or binary data for writing to a file.</para>
            </summary>
            <returns>A formatted <see cref="T:System.String"/> with the Data contained within the object.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.FeatureDefinition.ToDataRow">
            <summary>
            Formats the <see cref="T:FalconDatabase.Objects.Components.FeatureDefinition"/> as a <see cref="T:System.Data.DataRow"/>.
            </summary>
            <returns><see cref="T:System.Data.DataRow"/> object conforming to the ACD.xsd Schema in the XMLSchemas Directory.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.FeatureDefinition.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Objects.Components.FeatureDefinition"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.FeatureDefinition.#ctor(System.Data.DataRow)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Objects.Components.FeatureDefinition"/> object with a <see cref="T:System.Data.DataRow"/> that conforms to the ACD.xsd Schema File.
            </summary>
            <param name="row"></param>
        </member>
        <member name="T:FalconDatabase.Objects.Components.FeatureDefinition.FeatureFlags">
            <summary>
            Contents of the Feature Flags.
            </summary>
        </member>
        <member name="T:FalconDatabase.Objects.Components.IRSensorDefinition">
            <summary>
            IR Sensor Database Definition.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.IRSensorDefinition.ID">
            <summary>
            Index of this Entry in the Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.IRSensorDefinition.Name">
            <summary>
            Sensor Name.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.IRSensorDefinition.Range">
            <summary>
            Detection Range against F-16 Sized Target.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.IRSensorDefinition.FOV">
            <summary>
            Field of View from Center.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.IRSensorDefinition.GimbalLimit">
            <summary>
            Gimbal Limit from Center.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.IRSensorDefinition.GroundFactor">
            <summary>
            Range Multiplier applied to Ground Targets.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.IRSensorDefinition.FlareChance">
            <summary>
            Base Probability a Flare will work.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.IRSensorDefinition.ToString">
            <summary>
            <para>Formats the data contained within this object into Readable Text.</para>
            <para>Readable Text does not always match the underlying file format and should not be used to save text based files such as .xml, .ini, .lst, or .txtpb files.</para>
            <para>Instead, use Write() to format all text or binary data for writing to a file.</para>
            </summary>
            <returns>A formatted <see cref="T:System.String"/> with the Data contained within the object.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.IRSensorDefinition.ToDataRow">
            <summary>
            Formats the <see cref="T:FalconDatabase.Objects.Components.IRSensorDefinition"/> as a <see cref="T:System.Data.DataRow"/>.
            </summary>
            <returns><see cref="T:System.Data.DataRow"/> object conforming to the ACD.xsd Schema in the XMLSchemas Directory.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.IRSensorDefinition.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Objects.Components.IRSensorDefinition"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.IRSensorDefinition.#ctor(System.Data.DataRow)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Objects.Components.IRSensorDefinition"/> object with a <see cref="T:System.Data.DataRow"/> that conforms to the ACD.xsd Schema File.
            </summary>
            <param name="row"></param>
        </member>
        <member name="T:FalconDatabase.Objects.Components.ObjectiveDefinition">
            <summary>
            An Objective in the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.ID">
            <summary>
            Index of this object in the Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.ClassID">
            <summary>
            Index in the Class Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.Name">
            <summary>
            Name of the Objective.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.DataRate">
            <summary>
            Determines how the Campaign Engine interacts with the Objective.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.DeagDistance">
            <summary>
            Distance in feet the Bubble stays active when Entities are near in the 3D World.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.Detection">
            <summary>
            Detection Ranges for this Objective by Movement Type.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.DamageMod">
            <summary>
            Damage Modifiers against this Objective by Damage Type.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.IconIndex">
            <summary>
            Icon used for this Objective.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.RadarFeature">
            <summary>
            Feature ID that provides Radar for this Objective.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.Features">
            <summary>
            Collection of Features for this Objective.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.Points">
            <summary>
            <para>Collection of Point Data Objects to Define special locations on the Objective.</para>
            <para>Points and Point Headers define abstract points associated with Landing Locations, Approach Points, etc...</para>
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.HeaderData">
            <summary>
            Contains Details for the Points in the Objective.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ObjectiveDefinition.UpdatePHDOffsets">
            <summary>
            Updates the Point Header Data FirstPoint field.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ObjectiveDefinition.ToString">
            <summary>
            <para>Formats the data contained within this object into Readable Text.</para>
            <para>Readable Text does not always match the underlying file format and should not be used to save text based files such as .xml, .ini, .lst, or .txtpb files.</para>
            <para>Instead, use Write() to format all text or binary data for writing to a file.</para>
            </summary>
            <returns>A formatted <see cref="T:System.String"/> with the Data contained within the object.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ObjectiveDefinition.ToDataRow">
            <summary>
            Formats the <see cref="T:FalconDatabase.Objects.Components.ObjectiveDefinition"/> as a <see cref="T:System.Data.DataRow"/>.
            </summary>
            <returns><see cref="T:System.Data.DataRow"/> object conforming to the ACD.xsd Schema in the XMLSchemas Directory.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ObjectiveDefinition.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Objects.Components.ObjectiveDefinition"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ObjectiveDefinition.#ctor(System.Data.DataRow)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Objects.Components.ObjectiveDefinition"/> object with a <see cref="T:System.Data.DataRow"/> that conforms to the ACD.xsd Schema File.
            </summary>
            <param name="row"></param>
        </member>
        <member name="T:FalconDatabase.Objects.Components.ObjectiveDefinition.FeatureEntry">
            <summary>
            A Component of a Feature.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.FeatureEntry.ID">
            <summary>
            Index of this Feature in the Objective List.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.FeatureEntry.FeatureID">
            <summary>
            Feature ID.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.FeatureEntry.Value">
            <summary>
            Percentage of operational loss if destroyed.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.FeatureEntry.Offset">
            <summary>
            Offset of Component from the Feature Coordinates.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.FeatureEntry.Heading">
            <summary>
            The Direction the Component is facing.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ObjectiveDefinition.FeatureEntry.ToString">
            <summary>
            <para>Formats the data contained within this object into Readable Text.</para>
            <para>Readable Text does not always match the underlying file format and should not be used to save text based files such as .xml, .ini, .lst, or .txtpb files.</para>
            <para>Instead, use Write() to format all text or binary data for writing to a file.</para>
            </summary>
            <returns>A formatted <see cref="T:System.String"/> with the Data contained within the object.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ObjectiveDefinition.FeatureEntry.ToDataRow">
            <summary>
            Formats the <see cref="T:FalconDatabase.Objects.Components.ObjectiveDefinition.FeatureEntry"/> as a <see cref="T:System.Data.DataRow"/>.
            </summary>
            <returns><see cref="T:System.Data.DataRow"/> object conforming to the ACD.xsd Schema in the XMLSchemas Directory.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ObjectiveDefinition.FeatureEntry.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Objects.Components.ObjectiveDefinition.FeatureEntry"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ObjectiveDefinition.FeatureEntry.#ctor(System.Data.DataRow)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Objects.Components.ObjectiveDefinition.FeatureEntry"/> object with a <see cref="T:System.Data.DataRow"/> that conforms to the ACD.xsd Schema File.
            </summary>
            <param name="row"></param>
        </member>
        <member name="T:FalconDatabase.Objects.Components.ObjectiveDefinition.PointData">
            <summary>
            A Component of a Feature.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.PointData.ID">
            <summary>
            Index of this Feature in the Objective List.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.PointData.PointType">
            <summary>
            Feature ID.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.PointData.Flags">
            <summary>
            Percentage of operational loss if destroyed.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.PointData.Offset">
            <summary>
            Offset of Component from the Feature Coordinates.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.PointData.MaxHeight">
            <summary>
            Max Height of the Point.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.PointData.MaxWidth">
            <summary>
            Max Width.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.PointData.MaxLength">
            <summary>
            Max Length
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.PointData.TaxiwayLetter">
            <summary>
            Taxiway Letter.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.PointData.ParkingPointGroup">
            <summary>
            Parking Group
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.PointData.RunwaySide">
            <summary>
            runway Side
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.PointData.Heading">
            <summary>
            Heading
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.PointData.BranchIdx">
            <summary>
            Branch Index
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.PointData.RootIdx">
            <summary>
            Root Index
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.PointData.CrossingPoint">
            <summary>
            Crossing Point
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.PointData.RunwayNumber">
            <summary>
            Runway Number
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ObjectiveDefinition.PointData.ToString">
            <summary>
            <para>Formats the data contained within this object into Readable Text.</para>
            <para>Readable Text does not always match the underlying file format and should not be used to save text based files such as .xml, .ini, .lst, or .txtpb files.</para>
            <para>Instead, use Write() to format all text or binary data for writing to a file.</para>
            </summary>
            <returns>A formatted <see cref="T:System.String"/> with the Data contained within the object.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ObjectiveDefinition.PointData.ToDataRow">
            <summary>
            Formats the <see cref="T:FalconDatabase.Objects.Components.ObjectiveDefinition.PointData"/> as a <see cref="T:System.Data.DataRow"/>.
            </summary>
            <returns><see cref="T:System.Data.DataRow"/> object conforming to the ACD.xsd Schema in the XMLSchemas Directory.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ObjectiveDefinition.PointData.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Objects.Components.ObjectiveDefinition.PointData"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ObjectiveDefinition.PointData.#ctor(System.Data.DataRow)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Objects.Components.ObjectiveDefinition.PointData"/> object with a <see cref="T:System.Data.DataRow"/> that conforms to the ACD.xsd Schema File.
            </summary>
            <param name="row"></param>
        </member>
        <member name="T:FalconDatabase.Objects.Components.ObjectiveDefinition.PointHeaderData">
            <summary>
            A Component of a Feature.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.PointHeaderData.ID">
            <summary>
            Index of this Feature in the Objective List.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.PointHeaderData.ObjectiveID">
            <summary>
            Objective this Point Belongs to.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.PointHeaderData.PointType">
            <summary>
            Feature ID.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.PointHeaderData.PointCount">
            <summary>
            Number of Points this Objective has.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.PointHeaderData.FirstPoint">
            <summary>
            The Point Index in the Point Table where this set of Objective Points begins.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.PointHeaderData.DataValue">
            <summary>
            A Value that can be used to represent various specific fields, typically the Runway Heading.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.PointHeaderData.RunwayTexture">
            <summary>
            Texture used for this Point.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.PointHeaderData.RunwayNumber">
            <summary>
            Runway Number this Point is part of.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.PointHeaderData.LandingPattern">
            <summary>
            Landing Pattern this Point is part of.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.ObjectiveDefinition.PointHeaderData.Dependencies">
            <summary>
            External Features required to be loaded for this Point.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ObjectiveDefinition.PointHeaderData.ToString">
            <summary>
            <para>Formats the data contained within this object into Readable Text.</para>
            <para>Readable Text does not always match the underlying file format and should not be used to save text based files such as .xml, .ini, .lst, or .txtpb files.</para>
            <para>Instead, use Write() to format all text or binary data for writing to a file.</para>
            </summary>
            <returns>A formatted <see cref="T:System.String"/> with the Data contained within the object.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ObjectiveDefinition.PointHeaderData.ToDataRow">
            <summary>
            Formats the <see cref="T:FalconDatabase.Objects.Components.ObjectiveDefinition.PointHeaderData"/> as a <see cref="T:System.Data.DataRow"/>.
            </summary>
            <returns><see cref="T:System.Data.DataRow"/> object conforming to the ACD.xsd Schema in the XMLSchemas Directory.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ObjectiveDefinition.PointHeaderData.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Objects.Components.ObjectiveDefinition.PointHeaderData"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.ObjectiveDefinition.PointHeaderData.#ctor(System.Data.DataRow)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Objects.Components.ObjectiveDefinition.PointHeaderData"/> object with a <see cref="T:System.Data.DataRow"/> that conforms to the ACD.xsd Schema File.
            </summary>
            <param name="row"></param>
        </member>
        <member name="T:FalconDatabase.Objects.Components.RadarDefinition">
            <summary>
            Radar Object Definition.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RadarDefinition.ID">
            <summary>
            Index into the Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RadarDefinition.Name">
            <summary>
            Radar Name.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RadarDefinition.RWRSound">
            <summary>
            Sound to play when detected by an RWR.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RadarDefinition.RWRSymbol">
            <summary>
            Symbol to show when detected by an RWR.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RadarDefinition.RadarDataID">
            <summary>
            Index into the RDr Data Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RadarDefinition.HighAltitudeLethality">
            <summary>
            Effectiveness against High Altitude Targets.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RadarDefinition.LowAltitudeLethality">
            <summary>
            Effectiveness against Low Altitude Targets.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RadarDefinition.Range">
            <summary>
            Detection Range.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RadarDefinition.BeamWidth">
            <summary>
            Width of the Beam from Center.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RadarDefinition.ScanWidth">
            <summary>
            Max Angle of the Scan Capability from Center.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RadarDefinition.SweepRate">
            <summary>
            Speed which the Beam Sweeps.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RadarDefinition.CoastTime">
            <summary>
            How long the Radar will hold a lock when the target is lost.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RadarDefinition.LookDownPenalty">
            <summary>
            How much to degrade the Signal to Noise Ratio when in a Look-Down Scenario.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RadarDefinition.JammingPenalty">
            <summary>
            How much to degrade the Signal to Noise Ratio when in being Jammed.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RadarDefinition.NotchPenalty">
            <summary>
            How much to degrade the Signal to Noise Ratio when Target Aircraft Notches.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RadarDefinition.NotchSpeed">
            <summary>
            Effective Speed Target needs to fly to cause Radar to lose tracking ability.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RadarDefinition.ChaffChance">
            <summary>
            Base probability a Chaff will be effective.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RadarDefinition.Flags">
            <summary>
            Radar Flags.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.RadarDefinition.ToString">
            <summary>
            <para>Formats the data contained within this object into Readable Text.</para>
            <para>Readable Text does not always match the underlying file format and should not be used to save text based files such as .xml, .ini, .lst, or .txtpb files.</para>
            <para>Instead, use Write() to format all text or binary data for writing to a file.</para>
            </summary>
            <returns>A formatted <see cref="T:System.String"/> with the Data contained within the object.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.RadarDefinition.ToDataRow">
            <summary>
            Formats the <see cref="T:FalconDatabase.Objects.Components.RadarDefinition"/> as a <see cref="T:System.Data.DataRow"/>.
            </summary>
            <returns><see cref="T:System.Data.DataRow"/> object conforming to the ACD.xsd Schema in the XMLSchemas Directory.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.RadarDefinition.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Objects.Components.RadarDefinition"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.RadarDefinition.#ctor(System.Data.DataRow)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Objects.Components.RadarDefinition"/> object with a <see cref="T:System.Data.DataRow"/> that conforms to the ACD.xsd Schema File.
            </summary>
            <param name="row"></param>
        </member>
        <member name="T:FalconDatabase.Objects.Components.RadarSensorDefinition">
            <summary>
            The Radar Receiver and RWR Sensor Component of the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RadarSensorDefinition.ID">
            <summary>
            Index into the Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RadarSensorDefinition.Name">
            <summary>
            Sensor Name.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RadarSensorDefinition.Range">
            <summary>
            Detection Range Modifier of the Sensor in reference to the default F-16 RWR.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RadarSensorDefinition.TopAngle">
            <summary>
            Maximum Angle of Detection in the Top Quadrant of the Sensor.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RadarSensorDefinition.BottomAngle">
            <summary>
            Maximum Angle of Detection in the Bottom Quadrant of the Sensor.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RadarSensorDefinition.LeftAngle">
            <summary>
            Maximum Angle of Detection in the Left Quadrant of the Sensor.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RadarSensorDefinition.RightAngle">
            <summary>
            Maximum Angle of Detection in the Right Quadrant of the Sensor.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RadarSensorDefinition.Flags">
            <summary>
            Sensor Flags.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.RadarSensorDefinition.ToString">
            <summary>
            <para>Formats the data contained within this object into Readable Text.</para>
            <para>Readable Text does not always match the underlying file format and should not be used to save text based files such as .xml, .ini, .lst, or .txtpb files.</para>
            <para>Instead, use Write() to format all text or binary data for writing to a file.</para>
            </summary>
            <returns>A formatted <see cref="T:System.String"/> with the Data contained within the object.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.RadarSensorDefinition.ToDataRow">
            <summary>
            Formats the <see cref="T:FalconDatabase.Objects.Components.RadarSensorDefinition"/> as a <see cref="T:System.Data.DataRow"/>.
            </summary>
            <returns><see cref="T:System.Data.DataRow"/> object conforming to the ACD.xsd Schema in the XMLSchemas Directory.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.RadarSensorDefinition.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Objects.Components.RadarSensorDefinition"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.RadarSensorDefinition.#ctor(System.Data.DataRow)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Objects.Components.RadarSensorDefinition"/> object with a <see cref="T:System.Data.DataRow"/> that conforms to the ACD.xsd Schema File.
            </summary>
            <param name="row"></param>
        </member>
        <member name="T:FalconDatabase.Objects.Components.RocketDefinition">
            <summary>
            A Rocket Definition for the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RocketDefinition.ID">
            <summary>
            Index into the Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RocketDefinition.PodIndex">
            <summary>
            Index of the Pod that can fire this Rocket Object.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RocketDefinition.WeaponIndex">
            <summary>
            Weapon ID of the Rocket.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.RocketDefinition.WeaponCount">
            <summary>
            Number of Rockets in the Pod.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.RocketDefinition.ToString">
            <summary>
            <para>Formats the data contained within this object into Readable Text.</para>
            <para>Readable Text does not always match the underlying file format and should not be used to save text based files such as .xml, .ini, .lst, or .txtpb files.</para>
            <para>Instead, use Write() to format all text or binary data for writing to a file.</para>
            </summary>
            <returns>A formatted <see cref="T:System.String"/> with the Data contained within the object.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.RocketDefinition.ToDataRow">
            <summary>
            Formats the <see cref="T:FalconDatabase.Objects.Components.RocketDefinition"/> as a <see cref="T:System.Data.DataRow"/>.
            </summary>
            <returns><see cref="T:System.Data.DataRow"/> object conforming to the ACD.xsd Schema in the XMLSchemas Directory.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.RocketDefinition.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Objects.Components.RocketDefinition"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.RocketDefinition.#ctor(System.Data.DataRow)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Objects.Components.RocketDefinition"/> object with a <see cref="T:System.Data.DataRow"/> that conforms to the ACD.xsd Schema File.
            </summary>
            <param name="row"></param>
        </member>
        <member name="T:FalconDatabase.Objects.Components.SimWeaponDefinition">
            <summary>
            A Weapon Definition in the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.SimWeaponDefinition.ID">
            <summary>
            Index into the Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.SimWeaponDefinition.Flags">
            <summary>
            Weapon Flags.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.SimWeaponDefinition.DragCoefficient">
            <summary>
            Drag Coefficient.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.SimWeaponDefinition.Weight">
            <summary>
            Weapon Weight.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.SimWeaponDefinition.Area">
            <summary>
            Weapon Surface Area.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.SimWeaponDefinition.XEjection">
            <summary>
            X Component of the Ejection Velocity when the weapon is released.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.SimWeaponDefinition.YEjection">
            <summary>
            Y Component of the Ejection Velocity when the weapon is released.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.SimWeaponDefinition.ZEjection">
            <summary>
            Z Component of the Ejection Velocity when the weapon is released.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.SimWeaponDefinition.SMSMnemonic">
            <summary>
            Mnemonic displayed in the SMS Display.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.SimWeaponDefinition.WeaponClass">
            <summary>
            Weapon Class.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.SimWeaponDefinition.Domain">
            <summary>
            Weapon Domain.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.SimWeaponDefinition.WeaponType">
            <summary>
            Weapon Type.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.SimWeaponDefinition.WeaponID">
            <summary>
            Weapon ID.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.SimWeaponDefinition.ToString">
            <summary>
            <para>Formats the data contained within this object into Readable Text.</para>
            <para>Readable Text does not always match the underlying file format and should not be used to save text based files such as .xml, .ini, .lst, or .txtpb files.</para>
            <para>Instead, use Write() to format all text or binary data for writing to a file.</para>
            </summary>
            <returns>A formatted <see cref="T:System.String"/> with the Data contained within the object.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.SimWeaponDefinition.ToDataRow">
            <summary>
            Formats the <see cref="T:FalconDatabase.Objects.Components.SimWeaponDefinition"/> as a <see cref="T:System.Data.DataRow"/>.
            </summary>
            <returns><see cref="T:System.Data.DataRow"/> object conforming to the ACD.xsd Schema in the XMLSchemas Directory.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.SimWeaponDefinition.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Objects.Components.SimWeaponDefinition"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.SimWeaponDefinition.#ctor(System.Data.DataRow)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Objects.Components.SimWeaponDefinition"/> object with a <see cref="T:System.Data.DataRow"/> that conforms to the ACD.xsd Schema File.
            </summary>
            <param name="row"></param>
        </member>
        <member name="T:FalconDatabase.Objects.Components.SquadronStoresDefinition">
            <summary>
            Squadron Stores Definition in the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.SquadronStoresDefinition.ID">
            <summary>
            Index in the Table
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.SquadronStoresDefinition.Stores">
            <summary>
            Weapon Stores for a Squadron. Key = WeaponID, Value = Count.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.SquadronStoresDefinition.InfiniteAG">
            <summary>
            An A-G Weapon ID that never runs out.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.SquadronStoresDefinition.InfiniteAA">
            <summary>
            An A-A Weapon ID that never runs out.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.SquadronStoresDefinition.InfiniteGun">
            <summary>
            A Gun Weapon ID that never runs out.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.SquadronStoresDefinition.ToString">
            <summary>
            <para>Formats the data contained within this object into Readable Text.</para>
            <para>Readable Text does not always match the underlying file format and should not be used to save text based files such as .xml, .ini, .lst, or .txtpb files.</para>
            <para>Instead, use Write() to format all text or binary data for writing to a file.</para>
            </summary>
            <returns>A formatted <see cref="T:System.String"/> with the Data contained within the object.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.SquadronStoresDefinition.ToDataRow">
            <summary>
            Formats the <see cref="T:FalconDatabase.Objects.Components.SquadronStoresDefinition"/> as a <see cref="T:System.Data.DataRow"/>.
            </summary>
            <returns><see cref="T:System.Data.DataRow"/> object conforming to the ACD.xsd Schema in the XMLSchemas Directory.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.SquadronStoresDefinition.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Objects.Components.SquadronStoresDefinition"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.SquadronStoresDefinition.#ctor(System.Data.DataRow)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Objects.Components.SquadronStoresDefinition"/> object with a <see cref="T:System.Data.DataRow"/> that conforms to the ACD.xsd Schema File.
            </summary>
            <param name="row"></param>
        </member>
        <member name="T:FalconDatabase.Objects.Components.UnitDefinition">
            <summary>
            A Unit in the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.ID">
            <summary>
            Index into the Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.ClassID">
            <summary>
            ID in the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.PrimaryRole">
            <summary>
            Primary Mission Type Score.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.Name">
            <summary>
            Unit Name.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.Description">
            <summary>
            Unit Description
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.Flags">
            <summary>
            Unit Flags.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.MovementType">
            <summary>
            Movement Type of this Unit.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.MovementSpeed">
            <summary>
            Movement Speed of this Unit.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.MaxRange">
            <summary>
            Maximum Range of this Unit.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.Fuel">
            <summary>
            Internal Fuel Load.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.Rate">
            <summary>
            Rate which the Unit burns Fuel.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.PtDataIndex">
            <summary>
            Point Data Index.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.RadarVehicle">
            <summary>
            Vehicle ID of a Radar Vehicle in the Unit.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.SquadronStoresID">
            <summary>
            Variable Indexer into other Tables, such as the Squadron Stores Table for Squadrons.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.IconIndex">
            <summary>
            Icon Index.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.HitChance">
            <summary>
            Hit Chance against Targets with a given Movement Type.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.Strength">
            <summary>
            Hit Chance against Targets with a given Movement Type.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.Range">
            <summary>
            Range against Targets with a given Movement Type.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.Detection">
            <summary>
            Detection against Targets with a given Movement Type.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.DamageModifiers">
            <summary>
            Damage Modifier against Targets with a given Movement Type.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.Scores">
            <summary>
            Mission Type Score Value.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.Elements">
            <summary>
            The Elements that make up this Unit.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.ElementNames">
            <summary>
            Element Names.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.ElementNamePrefixes">
            <summary>
            Element Name Prefixes.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.ElementHullNumbers">
            <summary>
            Hull Numbers for the Unit.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.ElementTextureSets">
            <summary>
            Textures for the Elements.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.UnitDefinition.ElementDecals">
            <summary>
            Unit Decals
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.UnitDefinition.ToString">
            <summary>
            <para>Formats the data contained within this object into Readable Text.</para>
            <para>Readable Text does not always match the underlying file format and should not be used to save text based files such as .xml, .ini, .lst, or .txtpb files.</para>
            <para>Instead, use Write() to format all text or binary data for writing to a file.</para>
            </summary>
            <returns>A formatted <see cref="T:System.String"/> with the Data contained within the object.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.UnitDefinition.ToDataRow">
            <summary>
            Formats the <see cref="T:FalconDatabase.Objects.Components.UnitDefinition"/> as a <see cref="T:System.Data.DataRow"/>.
            </summary>
            <returns><see cref="T:System.Data.DataRow"/> object conforming to the ACD.xsd Schema in the XMLSchemas Directory.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.UnitDefinition.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Objects.Components.UnitDefinition"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.UnitDefinition.#ctor(System.Data.DataRow)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Objects.Components.UnitDefinition"/> object with a <see cref="T:System.Data.DataRow"/> that conforms to the ACD.xsd Schema File.
            </summary>
            <param name="row"></param>
        </member>
        <member name="T:FalconDatabase.Objects.Components.VehicleDefinition">
            <summary>
            A vehicle in the Campaign.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.ID">
            <summary>
            Index in the Table
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.ClassID">
            <summary>
            Vehicle ID in the Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.HitPoints">
            <summary>
            Damage the Vehicle can withstand.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.Flags">
            <summary>
            Vehicle Flags.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.Name">
            <summary>
            Vehicle Name.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.NCTR">
            <summary>
            Value displayed in the FCR when NCTR is evaluated.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.RCSFactor">
            <summary>
            Radar Cross Section calculated as log2( 1 + RCS relative to an F16 ).
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.MaxWeight">
            <summary>
            Maximum Weight the Vehicle can operate with.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.EmptyWeightt">
            <summary>
            Vehicle Empty or Dry Weight.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.FuelWeight">
            <summary>
            Amount of Fuel the Vehicle can carry.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.FuelBurnRate">
            <summary>
            Rate the Vehicle burns fuel.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.EngineSoundID">
            <summary>
            Index into the Engine Sound Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.MinAltitude">
            <summary>
            Minimum Operating Altitude.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.MaxAltitude">
            <summary>
            Maximum Operating Altituide.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.CruiseAlttitude">
            <summary>
            Standard Operating Altitude.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.MaxSpeed">
            <summary>
            Maximum Speed the Vehicle can operate at.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.RadarType">
            <summary>
            Radar Type from the Radar Database installed on the Vehicle.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.NumberOfPilots">
            <summary>
            Number of Pilots assigned to the Vehicle. Used when displaying Ejection Events.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.VisibleFlags">
            <summary>
            <para>Visbility Flags used by the Graphics Engine for Rack Visibility.</para>
            <para>//0x01 means hardpoint 0 is visible, 0x02 -> hdpt 1, etc</para>
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.CallsignIndex">
            <summary>
            Index into the Callsign List for this Vehicle.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.CallsignSlots">
            <summary>
            Number of Callsign Numbers this Vehicle requires.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.HitChance">
            <summary>
            Hit Chance of Vehicle against Targets by Movement Type.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.Strength">
            <summary>
            Strength against Targets by Movement Type.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.Range">
            <summary>
            Effective Range against Targets by Movement Type.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.Detection">
            <summary>
            Detection Range against Targets by Movement Type.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.DamageModifier">
            <summary>
            Damage Modifier Against Targets by Movement Type.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.Weapons">
            <summary>
            Weapons attached to the Vehicle Hardpoints
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.RackFlags">
            <summary>
            <para>Determines which Hardpoints require Racks on the Vehicle.</para>
            <para>//0x01 means hardpoint 0 needs a rack, 0x02 -> hdpt 1, etc</para>
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.CarrierObjectiveID">
            <summary>
            Objective ID of Carrier Target Objectives.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VehicleDefinition.IsVerticalLaunchingSystem">
            <summary>
            If the Vehicle is a Vertical Launch System (VLS).
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.VehicleDefinition.ToString">
            <summary>
            <para>Formats the data contained within this object into Readable Text.</para>
            <para>Readable Text does not always match the underlying file format and should not be used to save text based files such as .xml, .ini, .lst, or .txtpb files.</para>
            <para>Instead, use Write() to format all text or binary data for writing to a file.</para>
            </summary>
            <returns>A formatted <see cref="T:System.String"/> with the Data contained within the object.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.VehicleDefinition.ToDataRow">
            <summary>
            Formats the <see cref="T:FalconDatabase.Objects.Components.AircraftDefinition"/> as a <see cref="T:System.Data.DataRow"/>.
            </summary>
            <returns><see cref="T:System.Data.DataRow"/> object conforming to the ACD.xsd Schema in the XMLSchemas Directory.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.VehicleDefinition.#ctor">
            <summary>
            Default Constructor the <see cref="T:FalconDatabase.Objects.Components.VehicleDefinition"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.VehicleDefinition.#ctor(System.Data.DataRow)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Objects.Components.VehicleDefinition"/> object with a <see cref="T:System.Data.DataRow"/> that conforms to the ACD.xsd Schema File.
            </summary>
            <param name="row"></param>
        </member>
        <member name="T:FalconDatabase.Objects.Components.VisualSensorDefinition">
            <summary>
            A Visual Sensor in the Campaign.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VisualSensorDefinition.ID">
            <summary>
            Index in the Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VisualSensorDefinition.Name">
            <summary>
            Sensor Name.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VisualSensorDefinition.Range">
            <summary>
            Range of the Sensor.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VisualSensorDefinition.Top">
            <summary>
            Top View Angle from Center.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VisualSensorDefinition.Bottom">
            <summary>
            Bottom View Angle from Center.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VisualSensorDefinition.Left">
            <summary>
            Left View Angle from Center.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.VisualSensorDefinition.Right">
            <summary>
            Right View Angle from Center.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.VisualSensorDefinition.ToString">
            <summary>
            <para>Formats the data contained within this object into Readable Text.</para>
            <para>Readable Text does not always match the underlying file format and should not be used to save text based files such as .xml, .ini, .lst, or .txtpb files.</para>
            <para>Instead, use Write() to format all text or binary data for writing to a file.</para>
            </summary>
            <returns>A formatted <see cref="T:System.String"/> with the Data contained within the object.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.VisualSensorDefinition.ToDataRow">
            <summary>
            Formats the <see cref="T:FalconDatabase.Objects.Components.VisualSensorDefinition"/> as a <see cref="T:System.Data.DataRow"/>.
            </summary>
            <returns><see cref="T:System.Data.DataRow"/> object conforming to the ACD.xsd Schema in the XMLSchemas Directory.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.VisualSensorDefinition.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Objects.Components.VisualSensorDefinition"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.VisualSensorDefinition.#ctor(System.Data.DataRow)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Objects.Components.VisualSensorDefinition"/> object with a <see cref="T:System.Data.DataRow"/> that conforms to the ACD.xsd Schema File.
            </summary>
            <param name="row"></param>
        </member>
        <member name="T:FalconDatabase.Objects.Components.WeaponDefinition">
            <summary>
            A Weapon in the Campaign.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponDefinition.ID">
            <summary>
            Index in the Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponDefinition.ClassID">
            <summary>
            Weapon Class ID.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponDefinition.Strength">
            <summary>
            Amount of Damage this Weapon inflicts.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponDefinition.DamageType">
            <summary>
            The Damage Type this Weapon Does.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponDefinition.Range">
            <summary>
            Effective Range.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponDefinition.Flags">
            <summary>
            Weapon Flags.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponDefinition.Name">
            <summary>
            Weapon Name.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponDefinition.HitChance">
            <summary>
            Hit Chance of Weapon against Targets by Movement Type.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponDefinition.FireRate">
            <summary>
            Number of projectivels this weapon fires per fire event.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponDefinition.Rariety">
            <summary>
            How rare the Weapon is in Re-Supply calculations.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponDefinition.GuidanceFlags">
            <summary>
            Determines Guidance Type and Characteristics.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponDefinition.Collective">
            <summary>
            If this Weapon is a member of a Collection of other Weapons, such as bomblets.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponDefinition.RackGroup">
            <summary>
            Which Rack Group this Weapon belongs to.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponDefinition.Weight">
            <summary>
            Weapon Weight.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponDefinition.DragIndex">
            <summary>
            Drag Index of the Weapon.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponDefinition.BlastRadius">
            <summary>
            Effective Blast Radius of the Weapon.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponDefinition.RadarType">
            <summary>
            Weapon Radar Type in the Radar Database.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponDefinition.SimDataID">
            <summary>
            Index into the SimWeapon Table for Campaign Engine characteristics.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponDefinition.MaxAltitude">
            <summary>
            Maximum Operating Altitude.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponDefinition.MinAltitude">
            <summary>
            Minimum Operating Altitude.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponDefinition.BulletTTL">
            <summary>
            How long the Projective stays alive when fired.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponDefinition.BulletVelocity">
            <summary>
            Initial Velocity of the Weapon or Projectile when fired.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponDefinition.BulletDispersion">
            <summary>
            Base amount of spread or dispersion when multiple projectiles are fired in a single burst.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponDefinition.BulletRoundsPerSec">
            <summary>
            How fast the weapon fires when multiple projectiles are fired in a single burst.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.WeaponDefinition.ToString">
            <summary>
            <para>Formats the data contained within this object into Readable Text.</para>
            <para>Readable Text does not always match the underlying file format and should not be used to save text based files such as .xml, .ini, .lst, or .txtpb files.</para>
            <para>Instead, use Write() to format all text or binary data for writing to a file.</para>
            </summary>
            <returns>A formatted <see cref="T:System.String"/> with the Data contained within the object.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.WeaponDefinition.ToDataRow">
            <summary>
            Formats the <see cref="T:FalconDatabase.Objects.Components.WeaponDefinition"/> as a <see cref="T:System.Data.DataRow"/>.
            </summary>
            <returns><see cref="T:System.Data.DataRow"/> object conforming to the ACD.xsd Schema in the XMLSchemas Directory.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.WeaponDefinition.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Objects.Components.WeaponDefinition"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.WeaponDefinition.#ctor(System.Data.DataRow)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Objects.Components.WeaponDefinition"/> object with a <see cref="T:System.Data.DataRow"/> that conforms to the ACD.xsd Schema File.
            </summary>
            <param name="row"></param>
        </member>
        <member name="T:FalconDatabase.Objects.Components.WeaponLoadDefinition">
            <summary>
            Defines the types and number of Weapons that can be loaded on a Specific Rack or Hardpoint.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponLoadDefinition.ID">
            <summary>
            Index in the Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponLoadDefinition.Name">
            <summary>
            Rack or Hardpoint NAme.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Components.WeaponLoadDefinition.WeaponList">
            <summary>
            Type and Number of each Weapon that can be loaded on this Rack or Hardpoint.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.WeaponLoadDefinition.ToString">
            <summary>
            <para>Formats the data contained within this object into Readable Text.</para>
            <para>Readable Text does not always match the underlying file format and should not be used to save text based files such as .xml, .ini, .lst, or .txtpb files.</para>
            <para>Instead, use Write() to format all text or binary data for writing to a file.</para>
            </summary>
            <returns>A formatted <see cref="T:System.String"/> with the Data contained within the object.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.WeaponLoadDefinition.ToDataRow">
            <summary>
            Formats the <see cref="T:FalconDatabase.Objects.Components.WeaponLoadDefinition"/> as a <see cref="T:System.Data.DataRow"/>.
            </summary>
            <returns><see cref="T:System.Data.DataRow"/> object conforming to the ACD.xsd Schema in the XMLSchemas Directory.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Components.WeaponLoadDefinition.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Objects.Components.WeaponLoadDefinition"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Components.WeaponLoadDefinition.#ctor(System.Data.DataRow)">
            <summary>
            Initializes an instance of the <see cref="T:FalconDatabase.Objects.Components.WeaponLoadDefinition"/> object with a <see cref="T:System.Data.DataRow"/> that conforms to the ACD.xsd Schema File.
            </summary>
            <param name="row"></param>
        </member>
        <member name="T:FalconDatabase.Objects.Database">
            <summary>
            The Object Database for the Campaign.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Database.Classes">
            <summary>
            Database Class Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Database.DDPTable">
            <summary>
            Database Display Priorities Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Database.Aircraft">
            <summary>
            Database Aircraft Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Database.FeatureTable">
            <summary>
            Database Feature Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Database.IrSensorTable">
            <summary>
            Database IR Sensor Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Database.RadarTable">
            <summary>
            Database Radar Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Database.RadarReceiverTable">
            <summary>
            Radar Receiver and RWR Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Database.RocketTable">
            <summary>
            Rocket Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Database.SquadronStoresTable">
            <summary>
            Squadron Stores Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Database.UnitTable">
            <summary>
            Unit Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Database.WeaponTable">
            <summary>
            Sim Weapons Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Database.VehicleTable">
            <summary>
            Vehicle Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Database.VisualSensorTable">
            <summary>
            Visual Sensor Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Database.WeaponTable1">
            <summary>
            Weapon Table
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Database.WeaponLoadTable">
            <summary>
            Rack and Hardpoint Table.
            </summary>
        </member>
        <member name="P:FalconDatabase.Objects.Database.ObjectiveTable">
            <summary>
            Objective Table.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Database.Save(System.String)">
            <summary>
            Saves the current Database to the specific Directory in <paramref name="saveDirectory"/>.
            </summary>
            <param name="saveDirectory">The Directory where the Database will write the Files.</param>
            <returns><see langword="true"/> if the Save is successful, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:FalconDatabase.Objects.Database.#ctor">
            <summary>
            Default Constructor for the <see cref="T:FalconDatabase.Objects.Database"/> object.
            </summary>
        </member>
        <member name="M:FalconDatabase.Objects.Database.#ctor(System.String)">
            <summary>
            Searches the Directory in <paramref name="databasePath"/> and attempts to initialize a Falcon4 Datase.
            </summary>
            <param name="databasePath">The Directory Path to the Objects Folder where the Falcon4 Database XML Files are located.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the path in <paramref name="databasePath"/> is empty or null.</exception>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="databasePath"/> does not exist or is invalid.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Thrown if no Database FIles are found in <paramref name="databasePath"/>.</exception>
            <exception cref="T:System.Security.SecurityException">Thrown if the Application is unable to access to location or files contained in <paramref name="databasePath"/>.</exception>
        </member>
    </members>
</doc>
